[{"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx":"1","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx":"2","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts":"3","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts":"4","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts":"5","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx":"6","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx":"7","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx":"8","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx":"9","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx":"10","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx":"11","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx":"12","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts":"13","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx":"14","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx":"15","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts":"16","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts":"17","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts":"18","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx":"19","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts":"20","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts":"21","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js":"22","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts":"23","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js":"24","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js":"25","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js":"26","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js":"27","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js":"28","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js":"29","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js":"30","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts":"31"},{"size":197,"mtime":1611143005232,"results":"32","hashOfConfig":"33"},{"size":785,"mtime":1611663107980,"results":"34","hashOfConfig":"33"},{"size":662,"mtime":1611662891696,"results":"35","hashOfConfig":"33"},{"size":94,"mtime":1611149830611,"results":"36","hashOfConfig":"33"},{"size":281,"mtime":1611662359940,"results":"37","hashOfConfig":"33"},{"size":2392,"mtime":1611664344421,"results":"38","hashOfConfig":"33"},{"size":479,"mtime":1611664380770,"results":"39","hashOfConfig":"33"},{"size":2128,"mtime":1611664650061,"results":"40","hashOfConfig":"33"},{"size":83,"mtime":1611149072091,"results":"41","hashOfConfig":"33"},{"size":1594,"mtime":1611664751250,"results":"42","hashOfConfig":"33"},{"size":4874,"mtime":1611826557221,"results":"43","hashOfConfig":"33"},{"size":2166,"mtime":1611664616300,"results":"44","hashOfConfig":"33"},{"size":120,"mtime":1611668943476,"results":"45","hashOfConfig":"33"},{"size":1684,"mtime":1611664904372,"results":"46","hashOfConfig":"33"},{"size":2483,"mtime":1611682967754,"results":"47","hashOfConfig":"33"},{"size":319,"mtime":1611669224401,"results":"48","hashOfConfig":"33"},{"size":199,"mtime":1611674260518,"results":"49","hashOfConfig":"33"},{"size":2267,"mtime":1611145931381,"results":"50","hashOfConfig":"33"},{"size":1315,"mtime":1611838871550,"results":"51","hashOfConfig":"33"},{"size":3253,"mtime":1611827820017,"results":"52","hashOfConfig":"33"},{"size":3038,"mtime":1611808390778,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1611683237095,"results":"54","hashOfConfig":"33"},{"size":268,"mtime":1611753353465,"results":"55","hashOfConfig":"33"},{"size":3668,"mtime":1611695303023,"results":"56","hashOfConfig":"33"},{"size":3093,"mtime":1611686955329,"results":"57","hashOfConfig":"33"},{"size":651,"mtime":1611495128404,"results":"58","hashOfConfig":"33"},{"size":8081,"mtime":1611695379874,"results":"59","hashOfConfig":"33"},{"size":4800,"mtime":1611690735729,"results":"60","hashOfConfig":"33"},{"size":957,"mtime":1611489783889,"results":"61","hashOfConfig":"33"},{"size":4610,"mtime":1611755185761,"results":"62","hashOfConfig":"33"},{"size":174,"mtime":1611755818017,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tj6rwr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx",[],["132","133"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx",["134"],"import React, { useLayoutEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport { HomeOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { ControlTrack, useNormalStyles } from \"../../components\";\r\nimport { C } from \"../../util\";\r\nimport CodeDesc from \"./CodeDesc\";\r\nimport { Scene, SenkiArray } from \"../../lib/senki\";\r\nimport {\r\n  CodeContext,\r\n  CodeControl,\r\n  makeBubbleAlgoSource,\r\n} from \"../../lib/algo_desc\";\r\n\r\nlet scene: Scene;\r\nlet codeControl: CodeControl;\r\nlet [fakeCode, desc, realCode] = makeBubbleAlgoSource();\r\n\r\nlet tempTask: () => void | undefined; // 保存断点继续的执行函数\r\n\r\nconst SimulateDetail = () => {\r\n  const classes = useStyles();\r\n  const { flexRow, flexCol } = useNormalStyles();\r\n\r\n  const [data, setData] = useState<[]>()\r\n  const [status, setStatus] = useState<\"stop\" | \"play\" | \"finish\">(\"stop\");\r\n  const [codeInfo, setCodeInfo] = useState({ line: -1, desc: -1 }); // TODO  利用line高亮对应代码行\r\n\r\n  const statusRef = useRef(status);\r\n  statusRef.current = status; // 没办法，为了在闭包函数里引用，只能干这种愚蠢操作。\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  const createNewCodeControl = () => {\r\n    codeControl = new CodeControl(realCode);\r\n\r\n    const handleWait = ({ info, resolve }: CodeContext) => {\r\n      setCodeInfo(info);\r\n\r\n      // 确定动画结束了再进行下一步\r\n      const tryToNext = () => {\r\n        if (statusRef.current === \"play\") {\r\n          if (scene.isAnimAllOver()) resolve();\r\n          else setTimeout(tryToNext, 100);\r\n        } else tempTask = resolve;\r\n      };\r\n\r\n      setTimeout(tryToNext, 500);\r\n    };\r\n\r\n    const handleEnd = () => {\r\n      setStatus(\"finish\");\r\n      setCodeInfo({ line: -1, desc: -1 });\r\n    };\r\n\r\n    const handleDestroy = () => {\r\n      scene.removeAllChild();\r\n    };\r\n\r\n    codeControl.on(\"wait\", handleWait);\r\n    codeControl.on(\"end\", handleEnd);\r\n    codeControl.on(\"destroy\", handleDestroy);\r\n\r\n    codeControl.start();\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (tempTask) tempTask();\r\n    setStatus(\"play\");\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    [fakeCode, desc, realCode] = makeBubbleAlgoSource(data);\r\n    codeControl.destroy(); // 一定要记得销毁\r\n    createNewCodeControl();\r\n    setStatus(\"play\");\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setStatus(\"stop\");\r\n  };\r\n\r\n  const handleChangeSpeed = () => {};\r\n\r\n  useLayoutEffect(() => {\r\n    scene = new Scene(canvas.current!);\r\n    SenkiArray.config.scene = scene;\r\n    SenkiArray.config.width = scene.width;\r\n    SenkiArray.config.height = scene.height;\r\n    createNewCodeControl();\r\n  }, [canvas]);\r\n\r\n  return (\r\n    <div className={C([classes.container, flexCol])}>\r\n      <Breadcrumb className={classes.breadNav}>\r\n        <Breadcrumb.Item href=\"/\">\r\n          <HomeOutlined />\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/algosimulate\">\r\n          <UserOutlined />\r\n          <span>算法模拟</span>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>模拟详情</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className={C([classes.codeBox, flexRow])}>\r\n        <CodeDesc code={fakeCode} desc={desc} info={codeInfo} />\r\n        <canvas ref={canvas} className={classes.canvas}></canvas>\r\n      </div>\r\n      <div className={C([classes.operationArea, flexCol])}>\r\n        <div className={flexRow}>\r\n          <div className={classes.operationSingleArea}>\r\n            <div className={classes.operationPart}>\r\n              一些列表，切换使用的算法\r\n            </div>\r\n          </div>\r\n          <div className={classes.operationSingleArea}>\r\n            <div className={classes.operationPart}>数组操作</div>\r\n          </div>\r\n        </div>\r\n        <ControlTrack\r\n          status={status}\r\n          speed={400}\r\n          onPlay={handlePlay}\r\n          onStop={handleStop}\r\n          onRestart={handleRestart}\r\n          onChangeSpeed={handleChangeSpeed}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulateDetail;\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    minHeight: \"calc(100vh - 60px)\",\r\n    backgroundColor: \"#f2f2f2\",\r\n  },\r\n  breadNav: {\r\n    padding: 13,\r\n  },\r\n  codeBox: {\r\n    flex: 1,\r\n  },\r\n  canvas: {\r\n    flex: 1,\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    boxShadow: \"0 2px 12px 0 rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  operationArea: {\r\n    margin: 13,\r\n    height: \"20vh\",\r\n    backgroundColor: \"#2c303a\",\r\n  },\r\n  operationPart: {\r\n    height: \"47%\",\r\n    marginTop: \"1%\",\r\n    marginBottom: \"1%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  operationSingleArea: {\r\n    width: \"48%\",\r\n    height: \"100%\",\r\n    padding: \"0.5%\",\r\n  },\r\n  operationCode: {\r\n    backgroundColor: \"white\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx",["135"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Slider } from \"antd\";\r\nimport {\r\n  StepBackwardOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightOutlined,\r\n  StepForwardOutlined,\r\n  RedoOutlined,\r\n  PlayCircleFilled,\r\n  PauseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { C } from \"../util\";\r\n\r\ntype Props = {\r\n  status: \"stop\" | \"play\" | \"finish\";\r\n  speed: number;\r\n  className?: string;\r\n  onPlay?: () => void;\r\n  onStop?: () => void;\r\n  onRestart?: () => void;\r\n  onChangeSpeed?: (speed: number) => void;\r\n};\r\n\r\nconst ControlTrack = (props: Props) => {\r\n  const { className, speed, status } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={C([classes.controlTrack, className])}>\r\n      <div className={classes.speedContainer}>\r\n        <span>Speed</span>\r\n        <div className={classes.speedSlider}>\r\n          <Slider\r\n            defaultValue={speed || 400}\r\n            step={100}\r\n            min={100}\r\n            max={700}\r\n            onChange={props.onChangeSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.iconGroup}>\r\n        <StepBackwardOutlined className={classes.icon} />\r\n        <CaretLeftOutlined className={classes.icon} />\r\n        {status === \"stop\" && (\r\n          <PlayCircleFilled className={classes.icon} onClick={props.onPlay} />\r\n        )}\r\n        {status === \"play\" && (\r\n          <PauseOutlined className={classes.icon} onClick={props.onStop} />\r\n        )}\r\n        {status === \"finish\" && (\r\n          <RedoOutlined className={classes.icon} onClick={props.onRestart} />\r\n        )}\r\n        <CaretRightOutlined className={classes.icon} />\r\n        <StepForwardOutlined className={classes.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlTrack;\r\n\r\nconst useStyles = makeStyles({\r\n  controlTrack: {\r\n    height: 60,\r\n    backgroundColor: \"#2c303a\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"5px\",\r\n  },\r\n  speedContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    color: \"white\",\r\n    fontSize: \"18px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n  speedSlider: {\r\n    width: \"70%\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    fontSize: \"27px\",\r\n    marginRight: \"20px\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconGroup: {\r\n    marginRight: \"60px\",\r\n  },\r\n});\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts",["136","137","138"],"const WEEK_CHINESE = [\"七\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\r\n\r\nexport const SECOND = 1000\r\n\r\nexport const MINUTE = SECOND * 60\r\n\r\nexport const HOUR = MINUTE * 60\r\n\r\nexport const HALF_DAY = HOUR * 12\r\n\r\nexport const DAY = HALF_DAY * 2\r\n\r\n/**\r\n * 根据时间戳格式化时间\r\n * @param  fmt 格式\r\n * @param  timestamp 时间\r\n * @example\r\n * let date = new Date()\r\n * dateFormat(\"YYYY-mm-dd HH:MM\", date)\r\n * >>> 2019-06-06 19:45`\r\n */\r\nexport function dateFormat(fmt: string, timestamp: number | string | Date): string {\r\n  let ret: RegExpExecArray;\r\n\r\n  let date = timestamp instanceof Date ? timestamp : new Date(Number(timestamp));\r\n\r\n  if (date.toString() == \"Invalid Date\") throw \"err timestamp\";\r\n\r\n  const opt = {\r\n    \"Y+\": date.getFullYear().toString(), // 年\r\n    \"m+\": (date.getMonth() + 1).toString(), // 月\r\n    \"d+\": date.getDate().toString(), // 日\r\n    \"H+\": date.getHours().toString(), // 时\r\n    \"M+\": date.getMinutes().toString(), // 分\r\n    \"S+\": date.getSeconds().toString(), // 秒\r\n    \"w+\": WEEK_CHINESE[date.getDay()] //周X\r\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n  };\r\n\r\n  Object.keys(opt).forEach((k) => {\r\n    ret = new RegExp(\"(\" + k + \")\").exec(fmt)!;\r\n    if (ret) {\r\n      fmt = fmt.replace(\r\n        ret[1],\r\n        ret[1].length == 1 ? (opt as any)[k] : (opt as any)[k].padStart(ret[1].length, \"0\")\r\n      );\r\n    }\r\n  })\r\n\r\n  return fmt;\r\n}\r\n\r\n/**\r\n * 获取合适的时间提示\r\n */\r\nexport function getTipTime(timestamp1: number): string {\r\n  let date1 = new Date(timestamp1);\r\n  let date2 = new Date();\r\n  let timestamp2 = Date.now();\r\n\r\n  if (date2.getDate() === date1.getDate() && timestamp2 - timestamp1 < DAY)\r\n    return dateFormat(\"HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < DAY)\r\n    return dateFormat(\"昨天 HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < 2 * DAY)\r\n    return dateFormat(\"前天 HH:MM\", date1);\r\n  else if (date2.getDay() >= date1.getDay() && timestamp2 - timestamp1 < DAY * 7)\r\n    return dateFormat(\"星期w HH:MM\", date1);\r\n  else if (date2.getFullYear() === date1.getFullYear())\r\n    return dateFormat(\"mm-dd HH:MM\", date1);\r\n  else return dateFormat(\"YYYY-mm-dd HH:MM\", date1);\r\n}","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts",["139"],"import \"../senki/index.js\";\r\n\r\nclass MicroEvent<EventType extends string> {\r\n  _events!: {\r\n    [key in string]: ((...args: any[]) => void)[];\r\n  };\r\n\r\n  on(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(fct);\r\n  }\r\n\r\n  offAll(event: EventType) {\r\n    this._events = this._events || {};\r\n    delete this._events[event];\r\n  }\r\n\r\n  off(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    this._events[event].splice(this._events[event].indexOf(fct), 1);\r\n  }\r\n\r\n  emit(event: EventType, ...args: any[]) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    for (var i = 0; i < this._events[event].length; i++)\r\n      this._events[event][i].apply(this, args);\r\n  }\r\n}\r\n\r\nconst CodeControlPool: CodeControl[] = [];\r\n\r\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\r\n\r\ntype CodeInfo = { line: number; desc: number };\r\n\r\nexport type CodeContext = {\r\n  info: CodeInfo;\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\n\r\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\r\n  static count = 0;\r\n  executableFunction: () => Promise<void>;\r\n\r\n  static saveContext(count: number, context: CodeContext) {\r\n    const instance = CodeControlPool[count];\r\n    if (instance) instance.saveCodeContext(context);\r\n    else {\r\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\r\n      context?.reject(\"The entity has been deleted.\");\r\n    }\r\n  }\r\n\r\n  count = CodeControl.count++;\r\n\r\n  codeContext?: CodeContext;\r\n\r\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\r\n\r\n  _breakpointFunctionDeclaration = `\r\n  function wait(info) {\r\n    return new Promise((resolve, reject) => {\r\n      // console.log(${this.count})\r\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\r\n    });\r\n  };\r\n  `;\r\n\r\n  constructor(source: string) {\r\n    super();\r\n\r\n    CodeControlPool.push(this);\r\n    \r\n    this.executableFunction = Function(`\r\n    ${this._breakpointFunctionDeclaration}\r\n    return async function () {\r\n      ${source}\r\n    };\r\n    `)();\r\n  }\r\n\r\n  start() {\r\n    this.emit(\"begin\");\r\n    this.status = \"running\";\r\n    this.executableFunction()\r\n      .catch((err: any) => {\r\n        this.status = \"error\";\r\n        console.warn(err);\r\n        this.emit(\"error\", err);\r\n      })\r\n      .finally(() => {\r\n        this.status = \"idle\";\r\n        this.emit(\"end\");\r\n      });\r\n  }\r\n\r\n  saveCodeContext(context: CodeContext) {\r\n    this.codeContext = context;\r\n    this.emit(\"wait\", context);\r\n  }\r\n\r\n  destroy() {\r\n    delete CodeControlPool[this.count];\r\n    this.offAll(\"end\");\r\n    this.offAll(\"begin\");\r\n    this.offAll(\"wait\");\r\n    this.offAll(\"error\");\r\n    this.emit(\"destroy\");\r\n    this.offAll(\"destroy\");\r\n  }\r\n}\r\n\r\n(window as any).CodeControl = CodeControl;\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js",[],["140","141"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":25,"column":16,"nodeType":"148","messageId":"149","endLine":25,"endColumn":23},{"ruleId":"146","severity":1,"message":"150","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":27,"column":23,"nodeType":"153","messageId":"154","endLine":27,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":27,"column":42,"nodeType":"157","messageId":"158","endLine":27,"endColumn":64},{"ruleId":"151","severity":1,"message":"152","line":45,"column":23,"nodeType":"153","messageId":"154","endLine":45,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":78,"column":31,"nodeType":"161","messageId":"162","endLine":83,"endColumn":7},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"@typescript-eslint/no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","no-global-assign","no-unsafe-negation"]