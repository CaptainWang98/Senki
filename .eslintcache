[{"/Users/k/Documents/Senki/src/index.tsx":"1","/Users/k/Documents/Senki/src/app/index.tsx":"2","/Users/k/Documents/Senki/src/app/routes.ts":"3","/Users/k/Documents/Senki/src/layout/index.ts":"4","/Users/k/Documents/Senki/src/pages/index.ts":"5","/Users/k/Documents/Senki/src/layout/Header/index.tsx":"6","/Users/k/Documents/Senki/src/layout/Footer/index.tsx":"7","/Users/k/Documents/Senki/src/pages/NotFound/index.tsx":"8","/Users/k/Documents/Senki/src/pages/Welcome/index.tsx":"9","/Users/k/Documents/Senki/src/pages/AlgoSimulate/index.tsx":"10","/Users/k/Documents/Senki/src/pages/VisualEditor/index.tsx":"11","/Users/k/Documents/Senki/src/pages/SimulateDetail/index.tsx":"12","/Users/k/Documents/Senki/src/lib/algo_desc/CodeControl.ts":"13","/Users/k/Documents/Senki/src/lib/algo_desc/sort/bubble.ts":"14","/Users/k/Documents/Senki/src/pages/AlgoSimulate/AlgoBox.tsx":"15","/Users/k/Documents/Senki/src/pages/SimulateDetail/CodeDesc.tsx":"16","/Users/k/Documents/Senki/src/lib/senki/index.js":"17","/Users/k/Documents/Senki/src/components/index.ts":"18","/Users/k/Documents/Senki/src/util/index.ts":"19","/Users/k/Documents/Senki/src/lib/algo_desc/makeAlgoSource.ts":"20","/Users/k/Documents/Senki/src/lib/senki/structure/SenkiArray.js":"21","/Users/k/Documents/Senki/src/lib/senki/base/object.js":"22","/Users/k/Documents/Senki/src/lib/senki/base/scheduler.js":"23","/Users/k/Documents/Senki/src/lib/senki/components/Histogram.js":"24","/Users/k/Documents/Senki/src/util/date.ts":"25","/Users/k/Documents/Senki/src/components/NormalStyle.ts":"26","/Users/k/Documents/Senki/src/components/ControlTrack.tsx":"27","/Users/k/Documents/Senki/src/lib/senki/base/shape.js":"28","/Users/k/Documents/Senki/src/lib/senki/base/anim.js":"29","/Users/k/Documents/Senki/src/lib/senki/base/util.js":"30"},{"size":197,"mtime":1611233214162,"results":"31","hashOfConfig":"32"},{"size":746,"mtime":1611734486876,"results":"33","hashOfConfig":"32"},{"size":619,"mtime":1611734486877,"results":"34","hashOfConfig":"32"},{"size":92,"mtime":1611233214163,"results":"35","hashOfConfig":"32"},{"size":276,"mtime":1611734486889,"results":"36","hashOfConfig":"32"},{"size":2292,"mtime":1611734486880,"results":"37","hashOfConfig":"32"},{"size":458,"mtime":1611734486879,"results":"38","hashOfConfig":"32"},{"size":79,"mtime":1611233214164,"results":"39","hashOfConfig":"32"},{"size":2047,"mtime":1611734486888,"results":"40","hashOfConfig":"32"},{"size":1535,"mtime":1611734486885,"results":"41","hashOfConfig":"32"},{"size":2079,"mtime":1611734486887,"results":"42","hashOfConfig":"32"},{"size":4766,"mtime":1611734486887,"results":"43","hashOfConfig":"32"},{"size":2949,"mtime":1611734486880,"results":"44","hashOfConfig":"32"},{"size":1252,"mtime":1611734486881,"results":"45","hashOfConfig":"32"},{"size":1620,"mtime":1611734486884,"results":"46","hashOfConfig":"32"},{"size":1195,"mtime":1611734486886,"results":"47","hashOfConfig":"32"},{"size":194,"mtime":1611734486883,"results":"48","hashOfConfig":"32"},{"size":118,"mtime":1611734486878,"results":"49","hashOfConfig":"32"},{"size":191,"mtime":1611734486890,"results":"50","hashOfConfig":"32"},{"size":249,"mtime":1611734486881,"results":"51","hashOfConfig":"32"},{"size":3533,"mtime":1611734486884,"results":"52","hashOfConfig":"32"},{"size":2961,"mtime":1611734486882,"results":"53","hashOfConfig":"32"},{"size":623,"mtime":1611622909737,"results":"54","hashOfConfig":"32"},{"size":7765,"mtime":1611734486883,"results":"55","hashOfConfig":"32"},{"size":2196,"mtime":1611233214165,"results":"56","hashOfConfig":"32"},{"size":304,"mtime":1611734486878,"results":"57","hashOfConfig":"32"},{"size":2386,"mtime":1611734486878,"results":"58","hashOfConfig":"32"},{"size":4616,"mtime":1611734486882,"results":"59","hashOfConfig":"32"},{"size":4433,"mtime":1611622909736,"results":"60","hashOfConfig":"32"},{"size":923,"mtime":1611622909737,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"itvoxh",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/k/Documents/Senki/src/index.tsx",[],["128","129"],"/Users/k/Documents/Senki/src/app/index.tsx",[],"/Users/k/Documents/Senki/src/app/routes.ts",[],"/Users/k/Documents/Senki/src/layout/index.ts",[],"/Users/k/Documents/Senki/src/pages/index.ts",[],"/Users/k/Documents/Senki/src/layout/Header/index.tsx",[],"/Users/k/Documents/Senki/src/layout/Footer/index.tsx",[],"/Users/k/Documents/Senki/src/pages/NotFound/index.tsx",[],"/Users/k/Documents/Senki/src/pages/Welcome/index.tsx",[],"/Users/k/Documents/Senki/src/pages/AlgoSimulate/index.tsx",[],"/Users/k/Documents/Senki/src/pages/VisualEditor/index.tsx",[],"/Users/k/Documents/Senki/src/pages/SimulateDetail/index.tsx",["130"],"import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Breadcrumb } from \"antd\";\nimport { HomeOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { ControlTrack, useNormalStyles } from \"../../components\";\nimport { C } from \"../../util\";\nimport CodeDesc from \"./CodeDesc\";\nimport { Scene, SenkiArray } from \"../../lib/senki\";\nimport makeBubbleAlgoSource from \"../../lib/algo_desc/sort/bubble\";\nimport CodeControl, { CodeContext } from \"../../lib/algo_desc/CodeControl\";\n\nlet scene: Scene;\nlet codeControl: CodeControl;\nlet [fakeCode, desc, realCode] = makeBubbleAlgoSource([34, 9, 12, 23, 4, 21]);\n\nlet tempTask: () => void | undefined; // 保存断点继续的执行函数\n\nconst SimulateDetail = () => {\n  const classes = useStyles();\n  const { flexRow, flexCol } = useNormalStyles();\n\n  const [status, setStatus] = useState<\"stop\" | \"play\" | \"finish\">(\"stop\");\n  const [codeInfo, setCodeInfo] = useState({ line: -1, desc: -1 }); // TODO  利用line高亮对应代码行\n\n  const statusRef = useRef(status);\n  statusRef.current = status; // 没办法，为了在闭包函数里引用，只能干这种愚蠢操作。\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const createNewCodeControl = () => {\n    codeControl = new CodeControl(realCode);\n\n    const handleWait = ({ info, resolve }: CodeContext) => {\n      setCodeInfo(info);\n\n      const tryToNext = () => {\n        if (statusRef.current === \"play\") {\n          if (scene.isAnimAllOver()) resolve();\n          else setTimeout(tryToNext, 100);\n        } else tempTask = resolve;\n      };\n\n      setTimeout(tryToNext, 500);\n    };\n\n    const handleEnd = () => {\n      console.log(1);\n      setStatus(\"finish\");\n      setCodeInfo({ line: -1, desc: -1 });\n    };\n\n    const handleDestroy = () => {\n      scene.removeAllChild();\n    };\n\n    codeControl.on(\"wait\", handleWait);\n    codeControl.on(\"end\", handleEnd);\n    codeControl.on(\"destroy\", handleDestroy);\n\n    codeControl.start();\n  };\n\n  const handlePlay = () => {\n    if (tempTask) tempTask();\n    setStatus(\"play\");\n  };\n\n  const handleRestart = () => {\n    [fakeCode, desc, realCode] = makeBubbleAlgoSource([34, 9, 12, 23, 4, 21]);\n    codeControl.destroy(); // 一定要记得销毁\n    createNewCodeControl();\n    setStatus(\"play\");\n  };\n\n  const handleStop = () => {\n    setStatus(\"stop\");\n  };\n\n  const handleChangeSpeed = () => {};\n\n  useLayoutEffect(() => {\n    scene = new Scene(canvas.current!);\n    SenkiArray.config.scene = scene;\n    SenkiArray.config.width = scene.width;\n    SenkiArray.config.height = scene.height;\n    createNewCodeControl();\n  }, [canvas]);\n\n  return (\n    <div className={C([classes.container, flexCol])}>\n      {/* 面包屑导航 */}\n      <Breadcrumb className={classes.breadNav}>\n        <Breadcrumb.Item href=\"/\">\n          <HomeOutlined />\n        </Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/algosimulate\">\n          <UserOutlined />\n          <span>算法模拟</span>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>模拟详情</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className={C([classes.codeBox, flexRow])}>\n        <CodeDesc code={fakeCode} desc={desc} info={codeInfo} />\n        <canvas ref={canvas} className={classes.canvas}></canvas>\n      </div>\n      <div className={C([classes.operationArea, flexCol])}>\n        <div className={flexRow}>\n          <div className={classes.operationSingleArea}>\n            <div className={classes.operationPart}>\n              一些列表，切换使用的算法\n            </div>\n          </div>\n          <div className={classes.operationSingleArea}>\n            <div className={classes.operationPart}>数组操作</div>\n          </div>\n        </div>\n        <ControlTrack\n          status={status}\n          speed={400}\n          onPlay={handlePlay}\n          onStop={handleStop}\n          onRestart={handleRestart}\n          onChangeSpeed={handleChangeSpeed}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SimulateDetail;\n\nconst useStyles = makeStyles({\n  container: {\n    minHeight: \"calc(100vh - 60px)\",\n    backgroundColor: \"#f2f2f2\",\n  },\n  breadNav: {\n    padding: 13,\n  },\n  codeBox: {\n    flex: 1,\n  },\n  canvas: {\n    flex: 1,\n    marginLeft: 50,\n    marginRight: 50,\n    boxShadow: \"0 2px 12px 0 rgba(0, 0, 0, 0.1)\",\n  },\n  operationArea: {\n    margin: 13,\n    height: \"20vh\",\n    backgroundColor: \"#2c303a\",\n  },\n  operationPart: {\n    height: \"47%\",\n    marginTop: \"1%\",\n    marginBottom: \"1%\",\n    backgroundColor: \"white\",\n  },\n  operationSingleArea: {\n    width: \"48%\",\n    height: \"100%\",\n    padding: \"0.5%\",\n  },\n  operationCode: {\n    backgroundColor: \"white\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n","/Users/k/Documents/Senki/src/lib/algo_desc/CodeControl.ts",["131"],"import \"../senki/index.js\";\n\nclass MicroEvent<EventType extends string> {\n  _events!: {\n    [key in string]: ((...args: any[]) => void)[];\n  };\n\n  on(event: EventType, fct: (...args: any[]) => void) {\n    this._events = this._events || {};\n    this._events[event] = this._events[event] || [];\n    this._events[event].push(fct);\n  }\n\n  offAll(event: EventType) {\n    this._events = this._events || {};\n    delete this._events[event];\n  }\n\n  off(event: EventType, fct: (...args: any[]) => void) {\n    this._events = this._events || {};\n    if (event in this._events === false) return;\n    this._events[event].splice(this._events[event].indexOf(fct), 1);\n  }\n\n  emit(event: EventType, ...args: any[]) {\n    this._events = this._events || {};\n    if (event in this._events === false) return;\n    for (var i = 0; i < this._events[event].length; i++)\n      this._events[event][i].apply(this, args);\n  }\n}\n\nconst CodeControlPool: CodeControl[] = [];\n\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\n\ntype CodeInfo = { line: number; desc: number };\n\nexport type CodeContext = {\n  info: CodeInfo;\n  resolve: (value?: any) => void;\n  reject: (reason?: any) => void;\n};\n\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\n  static count = 0;\n  executableFunction: () => Promise<void>;\n\n  static saveContext(count: number, context: CodeContext) {\n    const instance = CodeControlPool[count];\n    if (instance) instance.saveCodeContext(context);\n    else {\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\n      context?.reject(\"The entity has been deleted.\");\n    }\n  }\n\n  count = CodeControl.count++;\n\n  codeContext?: CodeContext;\n\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\n\n  _breakpointFunctionDeclaration = `\n  function wait(info) {\n    return new Promise((resolve, reject) => {\n      // console.log(${this.count})\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\n    });\n  };\n  `;\n\n  constructor(source: string) {\n    super();\n\n    CodeControlPool.push(this);\n    console.log(CodeControlPool)\n    this.executableFunction = Function(`\n    ${this._breakpointFunctionDeclaration}\n    return async function () {\n      ${source}\n    };\n    `)();\n  }\n\n  start() {\n    this.emit(\"begin\");\n    this.status = \"running\";\n    this.executableFunction()\n      .catch((err: any) => {\n        this.status = \"error\";\n        console.warn(err);\n        this.emit(\"error\", err);\n      })\n      .finally(() => {\n        this.status = \"idle\";\n        this.emit(\"end\");\n      });\n  }\n\n  saveCodeContext(context: CodeContext) {\n    this.codeContext = context;\n    this.emit(\"wait\", context);\n  }\n\n  destroy() {\n    delete CodeControlPool[this.count];\n    this.offAll(\"end\");\n    this.offAll(\"begin\");\n    this.offAll(\"wait\");\n    this.offAll(\"error\");\n    this.emit(\"destroy\");\n    this.offAll(\"destroy\");\n  }\n}\n\n(window as any).CodeControl = CodeControl;\n","/Users/k/Documents/Senki/src/lib/algo_desc/sort/bubble.ts",[],"/Users/k/Documents/Senki/src/pages/AlgoSimulate/AlgoBox.tsx",[],"/Users/k/Documents/Senki/src/pages/SimulateDetail/CodeDesc.tsx",[],"/Users/k/Documents/Senki/src/lib/senki/index.js",[],["132","133"],"/Users/k/Documents/Senki/src/components/index.ts",[],"/Users/k/Documents/Senki/src/util/index.ts",[],"/Users/k/Documents/Senki/src/lib/algo_desc/makeAlgoSource.ts",[],"/Users/k/Documents/Senki/src/lib/senki/structure/SenkiArray.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/object.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/scheduler.js",[],"/Users/k/Documents/Senki/src/lib/senki/components/Histogram.js",[],"/Users/k/Documents/Senki/src/util/date.ts",["134","135","136"],"const WEEK_CHINESE = [\"七\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n\nexport const SECOND = 1000\n\nexport const MINUTE = SECOND * 60\n\nexport const HOUR = MINUTE * 60\n\nexport const HALF_DAY = HOUR * 12\n\nexport const DAY = HALF_DAY * 2\n\n/**\n * 根据时间戳格式化时间\n * @param  fmt 格式\n * @param  timestamp 时间\n * @example\n * let date = new Date()\n * dateFormat(\"YYYY-mm-dd HH:MM\", date)\n * >>> 2019-06-06 19:45`\n */\nexport function dateFormat(fmt: string, timestamp: number | string | Date): string {\n  let ret: RegExpExecArray;\n\n  let date = timestamp instanceof Date ? timestamp : new Date(Number(timestamp));\n\n  if (date.toString() == \"Invalid Date\") throw \"err timestamp\";\n\n  const opt = {\n    \"Y+\": date.getFullYear().toString(), // 年\n    \"m+\": (date.getMonth() + 1).toString(), // 月\n    \"d+\": date.getDate().toString(), // 日\n    \"H+\": date.getHours().toString(), // 时\n    \"M+\": date.getMinutes().toString(), // 分\n    \"S+\": date.getSeconds().toString(), // 秒\n    \"w+\": WEEK_CHINESE[date.getDay()] //周X\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\n  };\n\n  Object.keys(opt).forEach((k) => {\n    ret = new RegExp(\"(\" + k + \")\").exec(fmt)!;\n    if (ret) {\n      fmt = fmt.replace(\n        ret[1],\n        ret[1].length == 1 ? (opt as any)[k] : (opt as any)[k].padStart(ret[1].length, \"0\")\n      );\n    }\n  })\n\n  return fmt;\n}\n\n/**\n * 获取合适的时间提示\n */\nexport function getTipTime(timestamp1: number): string {\n  let date1 = new Date(timestamp1);\n  let date2 = new Date();\n  let timestamp2 = Date.now();\n\n  if (date2.getDate() === date1.getDate() && timestamp2 - timestamp1 < DAY)\n    return dateFormat(\"HH:MM\", date1);\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < DAY)\n    return dateFormat(\"昨天 HH:MM\", date1);\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < 2 * DAY)\n    return dateFormat(\"前天 HH:MM\", date1);\n  else if (date2.getDay() >= date1.getDay() && timestamp2 - timestamp1 < DAY * 7)\n    return dateFormat(\"星期w HH:MM\", date1);\n  else if (date2.getFullYear() === date1.getFullYear())\n    return dateFormat(\"mm-dd HH:MM\", date1);\n  else return dateFormat(\"YYYY-mm-dd HH:MM\", date1);\n}","/Users/k/Documents/Senki/src/components/NormalStyle.ts",[],"/Users/k/Documents/Senki/src/components/ControlTrack.tsx",["137"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Slider } from \"antd\";\nimport {\n  StepBackwardOutlined,\n  CaretLeftOutlined,\n  CaretRightOutlined,\n  StepForwardOutlined,\n  RedoOutlined,\n  PlayCircleFilled,\n  PauseOutlined,\n} from \"@ant-design/icons\";\nimport { C } from \"../util\";\n\ntype Props = {\n  status: \"stop\" | \"play\" | \"finish\";\n  speed: number;\n  className?: string;\n  onPlay?: () => void;\n  onStop?: () => void;\n  onRestart?: () => void;\n  onChangeSpeed?: (speed: number) => void;\n};\n\nconst ControlTrack = (props: Props) => {\n  const { className, speed, status } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={C([classes.controlTrack, className])}>\n      <div className={classes.speedContainer}>\n        <span>Speed</span>\n        <div className={classes.speedSlider}>\n          <Slider\n            defaultValue={speed || 400}\n            step={100}\n            min={100}\n            max={700}\n            onChange={props.onChangeSpeed}\n          />\n        </div>\n      </div>\n      <div className={classes.iconGroup}>\n        <StepBackwardOutlined className={classes.icon} />\n        <CaretLeftOutlined className={classes.icon} />\n        {status === \"stop\" && (\n          <PlayCircleFilled className={classes.icon} onClick={props.onPlay} />\n        )}\n        {status === \"play\" && (\n          <PauseOutlined className={classes.icon} onClick={props.onStop} />\n        )}\n        {status === \"finish\" && (\n          <RedoOutlined className={classes.icon} onClick={props.onRestart} />\n        )}\n        <CaretRightOutlined className={classes.icon} />\n        <StepForwardOutlined className={classes.icon} />\n      </div>\n    </div>\n  );\n};\n\nexport default ControlTrack;\n\nconst useStyles = makeStyles({\n  controlTrack: {\n    height: 60,\n    backgroundColor: \"#2c303a\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"5px\",\n  },\n  speedContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"50%\",\n    color: \"white\",\n    fontSize: \"18px\",\n    marginLeft: \"15px\",\n  },\n  speedSlider: {\n    width: \"70%\",\n    marginLeft: \"10px\",\n  },\n  icon: {\n    color: \"white\",\n    fontSize: \"27px\",\n    marginRight: \"20px\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  iconGroup: {\n    marginRight: \"60px\",\n  },\n});\n","/Users/k/Documents/Senki/src/lib/senki/base/shape.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/anim.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/util.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":78,"column":31,"nodeType":"148","messageId":"149","endLine":83,"endColumn":7},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"150","severity":1,"message":"151","line":27,"column":23,"nodeType":"152","messageId":"153","endLine":27,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":27,"column":42,"nodeType":"156","messageId":"157","endLine":27,"endColumn":64},{"ruleId":"150","severity":1,"message":"151","line":45,"column":23,"nodeType":"152","messageId":"153","endLine":45,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx":"1","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx":"2","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts":"3","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts":"4","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts":"5","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx":"6","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx":"7","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx":"8","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx":"9","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx":"10","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx":"11","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx":"12","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts":"13","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx":"14","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx":"15","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts":"16","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts":"17","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts":"18","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx":"19","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts":"20","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts":"21","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js":"22","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts":"23","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js":"24","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js":"25","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js":"26","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js":"27","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js":"28","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js":"29","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js":"30","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts":"31"},{"size":197,"mtime":1611143005232,"results":"32","hashOfConfig":"33"},{"size":785,"mtime":1611663107980,"results":"34","hashOfConfig":"33"},{"size":662,"mtime":1611662891696,"results":"35","hashOfConfig":"33"},{"size":94,"mtime":1611149830611,"results":"36","hashOfConfig":"33"},{"size":281,"mtime":1611662359940,"results":"37","hashOfConfig":"33"},{"size":2392,"mtime":1611664344421,"results":"38","hashOfConfig":"33"},{"size":479,"mtime":1611664380770,"results":"39","hashOfConfig":"33"},{"size":2128,"mtime":1611664650061,"results":"40","hashOfConfig":"33"},{"size":83,"mtime":1611149072091,"results":"41","hashOfConfig":"33"},{"size":1594,"mtime":1611664751250,"results":"42","hashOfConfig":"33"},{"size":4874,"mtime":1611757311849,"results":"43","hashOfConfig":"33"},{"size":2166,"mtime":1611664616300,"results":"44","hashOfConfig":"33"},{"size":120,"mtime":1611668943476,"results":"45","hashOfConfig":"33"},{"size":1684,"mtime":1611664904372,"results":"46","hashOfConfig":"33"},{"size":2483,"mtime":1611682967754,"results":"47","hashOfConfig":"33"},{"size":319,"mtime":1611669224401,"results":"48","hashOfConfig":"33"},{"size":199,"mtime":1611674260518,"results":"49","hashOfConfig":"33"},{"size":2267,"mtime":1611145931381,"results":"50","hashOfConfig":"33"},{"size":1255,"mtime":1611686863808,"results":"51","hashOfConfig":"33"},{"size":1455,"mtime":1611756244289,"results":"52","hashOfConfig":"33"},{"size":3066,"mtime":1611692305997,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1611683237095,"results":"54","hashOfConfig":"33"},{"size":268,"mtime":1611753353465,"results":"55","hashOfConfig":"33"},{"size":3668,"mtime":1611695303023,"results":"56","hashOfConfig":"33"},{"size":3093,"mtime":1611686955329,"results":"57","hashOfConfig":"33"},{"size":651,"mtime":1611495128404,"results":"58","hashOfConfig":"33"},{"size":8081,"mtime":1611695379874,"results":"59","hashOfConfig":"33"},{"size":4800,"mtime":1611690735729,"results":"60","hashOfConfig":"33"},{"size":957,"mtime":1611489783889,"results":"61","hashOfConfig":"33"},{"size":4610,"mtime":1611755185761,"results":"62","hashOfConfig":"33"},{"size":174,"mtime":1611755818017,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tj6rwr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx",[],["131","132"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx",["133"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx",["134"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Slider } from \"antd\";\r\nimport {\r\n  StepBackwardOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightOutlined,\r\n  StepForwardOutlined,\r\n  RedoOutlined,\r\n  PlayCircleFilled,\r\n  PauseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { C } from \"../util\";\r\n\r\ntype Props = {\r\n  status: \"stop\" | \"play\" | \"finish\";\r\n  speed: number;\r\n  className?: string;\r\n  onPlay?: () => void;\r\n  onStop?: () => void;\r\n  onRestart?: () => void;\r\n  onChangeSpeed?: (speed: number) => void;\r\n};\r\n\r\nconst ControlTrack = (props: Props) => {\r\n  const { className, speed, status } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={C([classes.controlTrack, className])}>\r\n      <div className={classes.speedContainer}>\r\n        <span>Speed</span>\r\n        <div className={classes.speedSlider}>\r\n          <Slider\r\n            defaultValue={speed || 400}\r\n            step={100}\r\n            min={100}\r\n            max={700}\r\n            onChange={props.onChangeSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.iconGroup}>\r\n        <StepBackwardOutlined className={classes.icon} />\r\n        <CaretLeftOutlined className={classes.icon} />\r\n        {status === \"stop\" && (\r\n          <PlayCircleFilled className={classes.icon} onClick={props.onPlay} />\r\n        )}\r\n        {status === \"play\" && (\r\n          <PauseOutlined className={classes.icon} onClick={props.onStop} />\r\n        )}\r\n        {status === \"finish\" && (\r\n          <RedoOutlined className={classes.icon} onClick={props.onRestart} />\r\n        )}\r\n        <CaretRightOutlined className={classes.icon} />\r\n        <StepForwardOutlined className={classes.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlTrack;\r\n\r\nconst useStyles = makeStyles({\r\n  controlTrack: {\r\n    height: 60,\r\n    backgroundColor: \"#2c303a\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"5px\",\r\n  },\r\n  speedContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    color: \"white\",\r\n    fontSize: \"18px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n  speedSlider: {\r\n    width: \"70%\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    fontSize: \"27px\",\r\n    marginRight: \"20px\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconGroup: {\r\n    marginRight: \"60px\",\r\n  },\r\n});\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts",["135","136","137"],"const WEEK_CHINESE = [\"七\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\r\n\r\nexport const SECOND = 1000\r\n\r\nexport const MINUTE = SECOND * 60\r\n\r\nexport const HOUR = MINUTE * 60\r\n\r\nexport const HALF_DAY = HOUR * 12\r\n\r\nexport const DAY = HALF_DAY * 2\r\n\r\n/**\r\n * 根据时间戳格式化时间\r\n * @param  fmt 格式\r\n * @param  timestamp 时间\r\n * @example\r\n * let date = new Date()\r\n * dateFormat(\"YYYY-mm-dd HH:MM\", date)\r\n * >>> 2019-06-06 19:45`\r\n */\r\nexport function dateFormat(fmt: string, timestamp: number | string | Date): string {\r\n  let ret: RegExpExecArray;\r\n\r\n  let date = timestamp instanceof Date ? timestamp : new Date(Number(timestamp));\r\n\r\n  if (date.toString() == \"Invalid Date\") throw \"err timestamp\";\r\n\r\n  const opt = {\r\n    \"Y+\": date.getFullYear().toString(), // 年\r\n    \"m+\": (date.getMonth() + 1).toString(), // 月\r\n    \"d+\": date.getDate().toString(), // 日\r\n    \"H+\": date.getHours().toString(), // 时\r\n    \"M+\": date.getMinutes().toString(), // 分\r\n    \"S+\": date.getSeconds().toString(), // 秒\r\n    \"w+\": WEEK_CHINESE[date.getDay()] //周X\r\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n  };\r\n\r\n  Object.keys(opt).forEach((k) => {\r\n    ret = new RegExp(\"(\" + k + \")\").exec(fmt)!;\r\n    if (ret) {\r\n      fmt = fmt.replace(\r\n        ret[1],\r\n        ret[1].length == 1 ? (opt as any)[k] : (opt as any)[k].padStart(ret[1].length, \"0\")\r\n      );\r\n    }\r\n  })\r\n\r\n  return fmt;\r\n}\r\n\r\n/**\r\n * 获取合适的时间提示\r\n */\r\nexport function getTipTime(timestamp1: number): string {\r\n  let date1 = new Date(timestamp1);\r\n  let date2 = new Date();\r\n  let timestamp2 = Date.now();\r\n\r\n  if (date2.getDate() === date1.getDate() && timestamp2 - timestamp1 < DAY)\r\n    return dateFormat(\"HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < DAY)\r\n    return dateFormat(\"昨天 HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < 2 * DAY)\r\n    return dateFormat(\"前天 HH:MM\", date1);\r\n  else if (date2.getDay() >= date1.getDay() && timestamp2 - timestamp1 < DAY * 7)\r\n    return dateFormat(\"星期w HH:MM\", date1);\r\n  else if (date2.getFullYear() === date1.getFullYear())\r\n    return dateFormat(\"mm-dd HH:MM\", date1);\r\n  else return dateFormat(\"YYYY-mm-dd HH:MM\", date1);\r\n}","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts",["138"],"import \"../senki/index.js\";\r\n\r\nclass MicroEvent<EventType extends string> {\r\n  _events!: {\r\n    [key in string]: ((...args: any[]) => void)[];\r\n  };\r\n\r\n  on(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(fct);\r\n  }\r\n\r\n  offAll(event: EventType) {\r\n    this._events = this._events || {};\r\n    delete this._events[event];\r\n  }\r\n\r\n  off(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    this._events[event].splice(this._events[event].indexOf(fct), 1);\r\n  }\r\n\r\n  emit(event: EventType, ...args: any[]) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    for (var i = 0; i < this._events[event].length; i++)\r\n      this._events[event][i].apply(this, args);\r\n  }\r\n}\r\n\r\nconst CodeControlPool: CodeControl[] = [];\r\n\r\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\r\n\r\ntype CodeInfo = { line: number; desc: number };\r\n\r\nexport type CodeContext = {\r\n  info: CodeInfo;\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\n\r\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\r\n  static count = 0;\r\n  executableFunction: () => Promise<void>;\r\n\r\n  static saveContext(count: number, context: CodeContext) {\r\n    const instance = CodeControlPool[count];\r\n    if (instance) instance.saveCodeContext(context);\r\n    else {\r\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\r\n      context?.reject(\"The entity has been deleted.\");\r\n    }\r\n  }\r\n\r\n  count = CodeControl.count++;\r\n\r\n  codeContext?: CodeContext;\r\n\r\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\r\n\r\n  _breakpointFunctionDeclaration = `\r\n  function wait(info) {\r\n    return new Promise((resolve, reject) => {\r\n      // console.log(${this.count})\r\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\r\n    });\r\n  };\r\n  `;\r\n\r\n  constructor(source: string) {\r\n    super();\r\n\r\n    CodeControlPool.push(this);\r\n    console.log(CodeControlPool)\r\n    this.executableFunction = Function(`\r\n    ${this._breakpointFunctionDeclaration}\r\n    return async function () {\r\n      ${source}\r\n    };\r\n    `)();\r\n  }\r\n\r\n  start() {\r\n    this.emit(\"begin\");\r\n    this.status = \"running\";\r\n    this.executableFunction()\r\n      .catch((err: any) => {\r\n        this.status = \"error\";\r\n        console.warn(err);\r\n        this.emit(\"error\", err);\r\n      })\r\n      .finally(() => {\r\n        this.status = \"idle\";\r\n        this.emit(\"end\");\r\n      });\r\n  }\r\n\r\n  saveCodeContext(context: CodeContext) {\r\n    this.codeContext = context;\r\n    this.emit(\"wait\", context);\r\n  }\r\n\r\n  destroy() {\r\n    delete CodeControlPool[this.count];\r\n    this.offAll(\"end\");\r\n    this.offAll(\"begin\");\r\n    this.offAll(\"wait\");\r\n    this.offAll(\"error\");\r\n    this.emit(\"destroy\");\r\n    this.offAll(\"destroy\");\r\n  }\r\n}\r\n\r\n(window as any).CodeControl = CodeControl;\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js",[],["139","140"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":25,"column":16,"nodeType":"147","messageId":"148","endLine":25,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":27,"column":23,"nodeType":"152","messageId":"153","endLine":27,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":27,"column":42,"nodeType":"156","messageId":"157","endLine":27,"endColumn":64},{"ruleId":"150","severity":1,"message":"151","line":45,"column":23,"nodeType":"152","messageId":"153","endLine":45,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":78,"column":31,"nodeType":"160","messageId":"161","endLine":83,"endColumn":7},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","no-global-assign","no-unsafe-negation"]
