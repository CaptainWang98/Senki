[{"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx":"1","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx":"2","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts":"3","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts":"4","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts":"5","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx":"6","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx":"7","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx":"8","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx":"9","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx":"10","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx":"11","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx":"12","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx":"13","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx":"14","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js":"15","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts":"16","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts":"17","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts":"18","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts":"19","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts":"20","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts":"21","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts":"22","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx":"23","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts":"24","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js":"25","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiLinkedNode.js":"26","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js":"27","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js":"28","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js":"29","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\ForestPlot.js":"30","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js":"31","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js":"32","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js":"33","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\selection.ts":"34","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\BreadcrumbNav.tsx":"35","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\quick.ts":"36","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\merge.ts":"37","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\shell.ts":"38","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\babel\\plugin-senki-wait.js":"39"},{"size":197,"mtime":1611143005232,"results":"40","hashOfConfig":"41"},{"size":929,"mtime":1611894100475,"results":"42","hashOfConfig":"41"},{"size":662,"mtime":1611994966687,"results":"43","hashOfConfig":"41"},{"size":94,"mtime":1611149830611,"results":"44","hashOfConfig":"41"},{"size":281,"mtime":1611662359940,"results":"45","hashOfConfig":"41"},{"size":509,"mtime":1611894100487,"results":"46","hashOfConfig":"41"},{"size":3324,"mtime":1611995176379,"results":"47","hashOfConfig":"41"},{"size":83,"mtime":1611149072091,"results":"48","hashOfConfig":"41"},{"size":12034,"mtime":1612024021176,"results":"49","hashOfConfig":"41"},{"size":2415,"mtime":1611929279404,"results":"50","hashOfConfig":"41"},{"size":6955,"mtime":1612015399406,"results":"51","hashOfConfig":"41"},{"size":2742,"mtime":1611994725366,"results":"52","hashOfConfig":"41"},{"size":2066,"mtime":1611939036654,"results":"53","hashOfConfig":"41"},{"size":2669,"mtime":1611929371430,"results":"54","hashOfConfig":"41"},{"size":382,"mtime":1611853125431,"results":"55","hashOfConfig":"41"},{"size":120,"mtime":1611668943476,"results":"56","hashOfConfig":"41"},{"size":202,"mtime":1611931659594,"results":"57","hashOfConfig":"41"},{"size":442,"mtime":1611939640011,"results":"58","hashOfConfig":"41"},{"size":319,"mtime":1611669224401,"results":"59","hashOfConfig":"41"},{"size":2277,"mtime":1611894100536,"results":"60","hashOfConfig":"41"},{"size":3071,"mtime":1611910804487,"results":"61","hashOfConfig":"41"},{"size":1455,"mtime":1611915212799,"results":"62","hashOfConfig":"41"},{"size":2734,"mtime":1612020003355,"results":"63","hashOfConfig":"41"},{"size":268,"mtime":1611753353465,"results":"64","hashOfConfig":"41"},{"size":3110,"mtime":1611888336392,"results":"65","hashOfConfig":"41"},{"size":4031,"mtime":1611890749727,"results":"66","hashOfConfig":"41"},{"size":3651,"mtime":1612021634364,"results":"67","hashOfConfig":"41"},{"size":651,"mtime":1611881573634,"results":"68","hashOfConfig":"41"},{"size":9496,"mtime":1612021971244,"results":"69","hashOfConfig":"41"},{"size":8614,"mtime":1611908746713,"results":"70","hashOfConfig":"41"},{"size":4610,"mtime":1611755185761,"results":"71","hashOfConfig":"41"},{"size":4815,"mtime":1611853851760,"results":"72","hashOfConfig":"41"},{"size":957,"mtime":1611489783889,"results":"73","hashOfConfig":"41"},{"size":1627,"mtime":1611918575253,"results":"74","hashOfConfig":"41"},{"size":824,"mtime":1611931299637,"results":"75","hashOfConfig":"41"},{"size":2718,"mtime":1611990275413,"results":"76","hashOfConfig":"41"},{"size":2502,"mtime":1611989528550,"results":"77","hashOfConfig":"41"},{"size":2310,"mtime":1611994689929,"results":"78","hashOfConfig":"41"},{"size":3186,"mtime":1612015952625,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"tj6rwr",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx",[],["163","164"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx",["165","166","167"],"import React, { useLayoutEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Tag, Input, Button } from \"antd\";\r\nimport { ControlTrack, useNormalStyles } from \"../../components\";\r\nimport { C } from \"../../util\";\r\nimport CodeDesc from \"./CodeDesc\";\r\nimport { Scene, SenkiArray } from \"../../lib/senki\";\r\nimport {\r\n  CodeContext,\r\n  CodeControl,\r\n  makeBubbleAlgoSource,\r\n  makeMergeAlgoSource,\r\n  makeQuickSortAlgoSource,\r\n  makeSelectionAlgoSource,\r\n  makeShellAlgoSource,\r\n} from \"../../lib/algo_desc\";\r\nimport { Link,useLocation } from \"react-router-dom\";\r\nimport BreadcrumbNav from \"./BreadcrumbNav\";\r\n\r\n\r\nlet scene: Scene;\r\nlet codeControl: CodeControl;\r\nlet makeAlgoSource = makeBubbleAlgoSource;\r\nlet fakeCode: string = \"\",\r\n  desc: string[] = [],\r\n  realCode: string = \"\";\r\n\r\nlet tempTask: () => void | undefined; // 保存断点继续的执行函数\r\n\r\nconst SimulateDetail = () => {\r\n  const classes = useStyles();\r\n  const { flexRow, flexCol } = useNormalStyles();\r\n  const [reviseArray, setReviseArray] = useState([]);\r\n  const location = useLocation();\r\n  const [data] = useState<[]>();\r\n  const [status, setStatus] = useState<\"stop\" | \"play\" | \"finish\">(\"stop\");\r\n  const [codeInfo, setCodeInfo] = useState({ line: [-1, -1], desc: -1 });\r\n\r\n  const statusRef = useRef(status);\r\n  statusRef.current = status; // 没办法，为了在闭包函数里引用，只能干这种愚蠢操作。\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  const createNewCodeControl = () => {\r\n    codeControl = new CodeControl(realCode);\r\n\r\n    const handleWait = ({ info, resolve }: CodeContext) => {\r\n      setCodeInfo(info);\r\n\r\n      // 确定动画结束了再进行下一步\r\n      const tryToNext = () => {\r\n        if (statusRef.current === \"play\") {\r\n          if (scene.isAnimAllOver()) resolve();\r\n          else setTimeout(tryToNext, 100);\r\n        } else tempTask = resolve;\r\n      };\r\n\r\n      setTimeout(tryToNext, 500);\r\n    };\r\n\r\n    const handleEnd = () => {\r\n      setStatus(\"finish\");\r\n      setCodeInfo({ line: [-1, -1], desc: -1 });\r\n    };\r\n\r\n    const handleDestroy = () => {\r\n      scene.removeAllChild();\r\n    };\r\n\r\n    codeControl.on(\"wait\", handleWait);\r\n    codeControl.on(\"end\", handleEnd);\r\n    codeControl.on(\"destroy\", handleDestroy);\r\n\r\n    codeControl.start();\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (tempTask) tempTask();\r\n    setStatus(\"play\");\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    [fakeCode, desc, realCode] = makeAlgoSource(data);\r\n    codeControl.destroy(); // 一定要记得销毁\r\n    createNewCodeControl();\r\n    setStatus(\"play\");\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setStatus(\"stop\");\r\n  };\r\n\r\n  const handleChangeSpeed = () => {};\r\n\r\n  const reviseArrayInputChange = (event: any) => {\r\n    // let reviseString = event.target.defaultValue;\r\n    console.log(event.target.defaultValue);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    scene = new Scene(canvas.current!);\r\n    SenkiArray.config.scene = scene;\r\n    SenkiArray.config.width = scene.width;\r\n    SenkiArray.config.height = scene.height;\r\n\r\n    let path = location.pathname;\r\n\r\n    if (/bubble/.test(path)) makeAlgoSource = makeBubbleAlgoSource;\r\n    if (/merge/.test(path)) makeAlgoSource = makeMergeAlgoSource;\r\n    if (/quick/.test(path)) makeAlgoSource = makeQuickSortAlgoSource;\r\n    if (/selection/.test(path)) makeAlgoSource = makeSelectionAlgoSource;\r\n    if (/shell/.test(path)) makeAlgoSource = makeShellAlgoSource;\r\n\r\n    [fakeCode, desc, realCode] = makeAlgoSource(data);\r\n\r\n    createNewCodeControl();\r\n  }, [canvas]);\r\n\r\n  return (\r\n    <div className={C(classes.container, flexCol)}>\r\n      <BreadcrumbNav />\r\n      <div className={C(classes.codeBox, flexRow)}>\r\n        <CodeDesc code={fakeCode} desc={desc} info={codeInfo} />\r\n        <canvas ref={canvas} className={classes.canvas}></canvas>\r\n      </div>\r\n      <div className={C(classes.operationArea, flexCol)}>\r\n        <div className={flexRow}>\r\n          <div className={classes.operationSingleArea}>\r\n            <div className={classes.operationPart}>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"magenta\">冒泡</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"cyan\">选择</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"geekblue\">堆排序</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"purple\">快排</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"green\">归并</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"blue\">希尔</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"purple\">快排</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"green\">归并</Tag>\r\n              </Link>\r\n              <Link to=\"/welcome\">\r\n                <Tag color=\"blue\">希尔</Tag>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className={classes.operationSingleArea}>\r\n            <div className={classes.operationPart}>\r\n              <div className={classes.reviseArrayInputButtonBox}>\r\n                <div className={classes.reviseArrayInput}>\r\n                  <Input\r\n                    placeholder=\"输入数组，例：[1,2,3,4,5]\"\r\n                    onChange={(event) => {\r\n                      reviseArrayInputChange(event);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Button>确认</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ControlTrack\r\n          status={status}\r\n          speed={400}\r\n          onPlay={handlePlay}\r\n          onStop={handleStop}\r\n          onRestart={handleRestart}\r\n          onChangeSpeed={handleChangeSpeed}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulateDetail;\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    minHeight: \"calc(100vh - 60px)\",\r\n  },\r\n  breadNav: {\r\n    padding: 13,\r\n  },\r\n  codeBox: {\r\n    flex: 1,\r\n  },\r\n  canvas: {\r\n    flex: 1,\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n  },\r\n  operationArea: {\r\n    margin: 13,\r\n    height: \"20vh\",\r\n    backgroundColor: \"#2c303a\",\r\n  },\r\n  operationPart: {\r\n    // height: \"47%\",\r\n    marginTop: \"1%\",\r\n    marginBottom: \"1%\",\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  operationSingleArea: {\r\n    width: \"48%\",\r\n    height: \"100%\",\r\n    padding: \"0.5%\",\r\n  },\r\n  operationCode: {\r\n    backgroundColor: \"white\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  reviseArrayInputButtonBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  reviseArrayInput: {\r\n    width: \"90%\",\r\n    marginRight: \"5px\",\r\n  },\r\n});\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js",[],["168","169"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts",["170"],"import \"../senki/index.js\";\r\n\r\nclass MicroEvent<EventType extends string> {\r\n  _events!: {\r\n    [key in string]: ((...args: any[]) => void)[];\r\n  };\r\n\r\n  on(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(fct);\r\n  }\r\n\r\n  offAll(event: EventType) {\r\n    this._events = this._events || {};\r\n    delete this._events[event];\r\n  }\r\n\r\n  off(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    let idx = this._events[event].indexOf(fct)\r\n    if (idx !== -1) this._events[event].splice(idx, 1);\r\n  }\r\n\r\n  emit(event: EventType, ...args: any[]) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    for (var i = 0; i < this._events[event].length; i++)\r\n      this._events[event][i].apply(this, args);\r\n  }\r\n}\r\n\r\nconst CodeControlPool: CodeControl[] = [];\r\n\r\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\r\n\r\ntype CodeInfo = { line: number[]; desc: number };\r\n\r\nexport type CodeContext = {\r\n  info: CodeInfo;\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\n\r\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\r\n  static count = 0;\r\n  executableFunction: () => Promise<void>;\r\n\r\n  static saveContext(count: number, context: CodeContext) {\r\n    const instance = CodeControlPool[count];\r\n    if (instance) instance.saveCodeContext(context);\r\n    else {\r\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\r\n      context?.reject(\"The entity has been deleted.\");\r\n    }\r\n  }\r\n\r\n  count = CodeControl.count++;\r\n\r\n  codeContext?: CodeContext;\r\n\r\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\r\n\r\n  _breakpointFunctionDeclaration = `\r\n  function wait(info) {\r\n    return new Promise((resolve, reject) => {\r\n      // console.log(${this.count})\r\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\r\n    });\r\n  };\r\n  `;\r\n\r\n  constructor(source: string) {\r\n    super();\r\n\r\n    CodeControlPool.push(this);\r\n\r\n    this.executableFunction = Function(`\r\n    ${this._breakpointFunctionDeclaration}\r\n    return async function () {\r\n      ${source}\r\n    };\r\n    `)();\r\n  }\r\n\r\n  start() {\r\n    this.emit(\"begin\");\r\n    this.status = \"running\";\r\n    this.executableFunction()\r\n      .catch((err: any) => {\r\n        this.status = \"error\";\r\n        console.warn(err);\r\n        this.emit(\"error\", err);\r\n      })\r\n      .finally(() => {\r\n        this.status = \"idle\";\r\n        this.emit(\"end\");\r\n      });\r\n  }\r\n\r\n  saveCodeContext(context: CodeContext) {\r\n    this.codeContext = context;\r\n    this.emit(\"wait\", context);\r\n  }\r\n\r\n  destroy() {\r\n    delete CodeControlPool[this.count];\r\n    this.offAll(\"end\");\r\n    this.offAll(\"begin\");\r\n    this.offAll(\"wait\");\r\n    this.offAll(\"error\");\r\n    this.emit(\"destroy\");\r\n    this.offAll(\"destroy\");\r\n  }\r\n}\r\n\r\n(window as any).CodeControl = CodeControl;\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiLinkedNode.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\ForestPlot.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\selection.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\BreadcrumbNav.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\quick.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\merge.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\shell.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\babel\\plugin-senki-wait.js",["171"],"export default function ({ types: t }) {\r\n  const findLine = (path, node) => {\r\n    if (node && node.loc) return [node.loc.start.line, node.loc.end.line];\r\n\r\n    if (!path) return -1;\r\n\r\n    if (path.node.loc)\r\n      return [path.node.loc.start.line, path.node.loc.end.line];\r\n    else return findLine(path.parentPath);\r\n  };\r\n\r\n  const createWaitNode = ([lineStart = -1, lineEnd = -1], descNum = -1) => {\r\n    return t.awaitExpression(\r\n      t.callExpression(t.identifier(\"wait\"), [\r\n        t.objectExpression([\r\n          t.objectProperty(\r\n            t.identifier(\"line\"),\r\n            t.arrayExpression([\r\n              t.numericLiteral(lineStart),\r\n              t.numericLiteral(lineEnd),\r\n            ])\r\n          ),\r\n          t.objectProperty(t.identifier(\"desc\"), t.numericLiteral(descNum)),\r\n        ]),\r\n      ])\r\n    );\r\n  };\r\n\r\n  return {\r\n    name: \"senki-wait\",\r\n    visitor: {\r\n      Program(path) {\r\n        let len = path.node.body.length;\r\n        for (let i = 0; i < len; i++) {\r\n          path.node.body.splice(\r\n            i * 2 + 1,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[i * 2]))\r\n          );\r\n        }\r\n      },\r\n      ArrowFunctionExpression(path) {\r\n        if (t.isExpression(path.node.body)) {\r\n          path\r\n            .get(\"body\")\r\n            .replaceWith(t.blockStatement([t.returnStatement(path.node.body)]));\r\n        }\r\n      },\r\n      Statement(path) {\r\n        if (t.isBlockStatement(path.node)) return;\r\n        if (t.isBreakStatement(path.node)) return;\r\n\r\n        const parentNode = path.parentPath.node;\r\n\r\n        if (t.isWithStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isIfStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isWhileStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isDoWhileStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isForStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isForInStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isSwitchCase(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n      },\r\n      BlockStatement(path) {\r\n        let len = path.node.body.length;\r\n        for (let i = 0; i < len; i++) {\r\n          path.node.body.splice(\r\n            i * 2,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[i * 2 - 1]))\r\n          );\r\n        }\r\n        if (!t.isReturnStatement(path.node.body[len * 2 - 1]))\r\n          path.node.body.splice(\r\n            len * 2,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[len * 2 - 1]))\r\n          );\r\n      },\r\n      Function(path) {\r\n        path.node.async = true;\r\n      },\r\n      CallExpression(path) {\r\n        if (!t.isAwaitExpression(path.parentPath.node))\r\n          path.replaceWith(t.awaitExpression(path.node))\r\n      }\r\n    },\r\n  };\r\n};\r\n",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":33,"column":10,"nodeType":"178","messageId":"179","endLine":33,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":33,"column":23,"nodeType":"178","messageId":"179","endLine":33,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":116,"column":6,"nodeType":"183","endLine":116,"endColumn":14,"suggestions":"184"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"185","severity":1,"message":"186","line":79,"column":31,"nodeType":"187","messageId":"188","endLine":84,"endColumn":7},{"ruleId":"189","severity":1,"message":"190","line":1,"column":1,"nodeType":"191","endLine":108,"endColumn":2},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"@typescript-eslint/no-unused-vars","'reviseArray' is assigned a value but never used.","Identifier","unusedVar","'setReviseArray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'data' and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["194"],"no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},"Update the dependencies array to be: [canvas, data, location.pathname]",{"range":"197","text":"198"},[3482,3490],"[canvas, data, location.pathname]"]