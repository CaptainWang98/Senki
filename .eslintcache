[{"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx":"1","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx":"2","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts":"3","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts":"4","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts":"5","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx":"6","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx":"7","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx":"8","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx":"9","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx":"10","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx":"11","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx":"12","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts":"13","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx":"14","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx":"15","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts":"16","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts":"17","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts":"18","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx":"19","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts":"20","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts":"21","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js":"22","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts":"23","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js":"24","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js":"25","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js":"26","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js":"27","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js":"28","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js":"29","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js":"30","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts":"31"},{"size":197,"mtime":1611143005232,"results":"32","hashOfConfig":"33"},{"size":785,"mtime":1611663107980,"results":"34","hashOfConfig":"33"},{"size":662,"mtime":1611662891696,"results":"35","hashOfConfig":"33"},{"size":94,"mtime":1611149830611,"results":"36","hashOfConfig":"33"},{"size":281,"mtime":1611662359940,"results":"37","hashOfConfig":"33"},{"size":2392,"mtime":1611664344421,"results":"38","hashOfConfig":"33"},{"size":479,"mtime":1611664380770,"results":"39","hashOfConfig":"33"},{"size":2128,"mtime":1611664650061,"results":"40","hashOfConfig":"33"},{"size":83,"mtime":1611149072091,"results":"41","hashOfConfig":"33"},{"size":1594,"mtime":1611664751250,"results":"42","hashOfConfig":"33"},{"size":4874,"mtime":1611757311849,"results":"43","hashOfConfig":"33"},{"size":2166,"mtime":1611664616300,"results":"44","hashOfConfig":"33"},{"size":120,"mtime":1611668943476,"results":"45","hashOfConfig":"33"},{"size":1684,"mtime":1611664904372,"results":"46","hashOfConfig":"33"},{"size":2483,"mtime":1611682967754,"results":"47","hashOfConfig":"33"},{"size":319,"mtime":1611669224401,"results":"48","hashOfConfig":"33"},{"size":199,"mtime":1611674260518,"results":"49","hashOfConfig":"33"},{"size":2267,"mtime":1611145931381,"results":"50","hashOfConfig":"33"},{"size":1255,"mtime":1611686863808,"results":"51","hashOfConfig":"33"},{"size":1455,"mtime":1611756244289,"results":"52","hashOfConfig":"33"},{"size":3066,"mtime":1611692305997,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1611683237095,"results":"54","hashOfConfig":"33"},{"size":268,"mtime":1611753353465,"results":"55","hashOfConfig":"33"},{"size":3668,"mtime":1611695303023,"results":"56","hashOfConfig":"33"},{"size":3093,"mtime":1611686955329,"results":"57","hashOfConfig":"33"},{"size":651,"mtime":1611495128404,"results":"58","hashOfConfig":"33"},{"size":8081,"mtime":1611695379874,"results":"59","hashOfConfig":"33"},{"size":4800,"mtime":1611690735729,"results":"60","hashOfConfig":"33"},{"size":957,"mtime":1611489783889,"results":"61","hashOfConfig":"33"},{"size":4610,"mtime":1611755185761,"results":"62","hashOfConfig":"33"},{"size":174,"mtime":1611755818017,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tj6rwr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx",[],["131","132"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.tsx",["133"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx",["134"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Slider } from \"antd\";\r\nimport {\r\n  StepBackwardOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightOutlined,\r\n  StepForwardOutlined,\r\n  RedoOutlined,\r\n  PlayCircleFilled,\r\n  PauseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { C } from \"../util\";\r\n\r\ntype Props = {\r\n  status: \"stop\" | \"play\" | \"finish\";\r\n  speed: number;\r\n  className?: string;\r\n  onPlay?: () => void;\r\n  onStop?: () => void;\r\n  onRestart?: () => void;\r\n  onChangeSpeed?: (speed: number) => void;\r\n};\r\n\r\nconst ControlTrack = (props: Props) => {\r\n  const { className, speed, status } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={C([classes.controlTrack, className])}>\r\n      <div className={classes.speedContainer}>\r\n        <span>Speed</span>\r\n        <div className={classes.speedSlider}>\r\n          <Slider\r\n            defaultValue={speed || 400}\r\n            step={100}\r\n            min={100}\r\n            max={700}\r\n            onChange={props.onChangeSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.iconGroup}>\r\n        <StepBackwardOutlined className={classes.icon} />\r\n        <CaretLeftOutlined className={classes.icon} />\r\n        {status === \"stop\" && (\r\n          <PlayCircleFilled className={classes.icon} onClick={props.onPlay} />\r\n        )}\r\n        {status === \"play\" && (\r\n          <PauseOutlined className={classes.icon} onClick={props.onStop} />\r\n        )}\r\n        {status === \"finish\" && (\r\n          <RedoOutlined className={classes.icon} onClick={props.onRestart} />\r\n        )}\r\n        <CaretRightOutlined className={classes.icon} />\r\n        <StepForwardOutlined className={classes.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlTrack;\r\n\r\nconst useStyles = makeStyles({\r\n  controlTrack: {\r\n    height: 60,\r\n    backgroundColor: \"#2c303a\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"5px\",\r\n  },\r\n  speedContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    color: \"white\",\r\n    fontSize: \"18px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n  speedSlider: {\r\n    width: \"70%\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    fontSize: \"27px\",\r\n    marginRight: \"20px\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconGroup: {\r\n    marginRight: \"60px\",\r\n  },\r\n});\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts",["135","136","137"],"const WEEK_CHINESE = [\"七\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\r\n\r\nexport const SECOND = 1000\r\n\r\nexport const MINUTE = SECOND * 60\r\n\r\nexport const HOUR = MINUTE * 60\r\n\r\nexport const HALF_DAY = HOUR * 12\r\n\r\nexport const DAY = HALF_DAY * 2\r\n\r\n/**\r\n * 根据时间戳格式化时间\r\n * @param  fmt 格式\r\n * @param  timestamp 时间\r\n * @example\r\n * let date = new Date()\r\n * dateFormat(\"YYYY-mm-dd HH:MM\", date)\r\n * >>> 2019-06-06 19:45`\r\n */\r\nexport function dateFormat(fmt: string, timestamp: number | string | Date): string {\r\n  let ret: RegExpExecArray;\r\n\r\n  let date = timestamp instanceof Date ? timestamp : new Date(Number(timestamp));\r\n\r\n  if (date.toString() == \"Invalid Date\") throw \"err timestamp\";\r\n\r\n  const opt = {\r\n    \"Y+\": date.getFullYear().toString(), // 年\r\n    \"m+\": (date.getMonth() + 1).toString(), // 月\r\n    \"d+\": date.getDate().toString(), // 日\r\n    \"H+\": date.getHours().toString(), // 时\r\n    \"M+\": date.getMinutes().toString(), // 分\r\n    \"S+\": date.getSeconds().toString(), // 秒\r\n    \"w+\": WEEK_CHINESE[date.getDay()] //周X\r\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n  };\r\n\r\n  Object.keys(opt).forEach((k) => {\r\n    ret = new RegExp(\"(\" + k + \")\").exec(fmt)!;\r\n    if (ret) {\r\n      fmt = fmt.replace(\r\n        ret[1],\r\n        ret[1].length == 1 ? (opt as any)[k] : (opt as any)[k].padStart(ret[1].length, \"0\")\r\n      );\r\n    }\r\n  })\r\n\r\n  return fmt;\r\n}\r\n\r\n/**\r\n * 获取合适的时间提示\r\n */\r\nexport function getTipTime(timestamp1: number): string {\r\n  let date1 = new Date(timestamp1);\r\n  let date2 = new Date();\r\n  let timestamp2 = Date.now();\r\n\r\n  if (date2.getDate() === date1.getDate() && timestamp2 - timestamp1 < DAY)\r\n    return dateFormat(\"HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < DAY)\r\n    return dateFormat(\"昨天 HH:MM\", date1);\r\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < 2 * DAY)\r\n    return dateFormat(\"前天 HH:MM\", date1);\r\n  else if (date2.getDay() >= date1.getDay() && timestamp2 - timestamp1 < DAY * 7)\r\n    return dateFormat(\"星期w HH:MM\", date1);\r\n  else if (date2.getFullYear() === date1.getFullYear())\r\n    return dateFormat(\"mm-dd HH:MM\", date1);\r\n  else return dateFormat(\"YYYY-mm-dd HH:MM\", date1);\r\n}","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts",["138"],"import \"../senki/index.js\";\r\n\r\nclass MicroEvent<EventType extends string> {\r\n  _events!: {\r\n    [key in string]: ((...args: any[]) => void)[];\r\n  };\r\n\r\n  on(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(fct);\r\n  }\r\n\r\n  offAll(event: EventType) {\r\n    this._events = this._events || {};\r\n    delete this._events[event];\r\n  }\r\n\r\n  off(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    this._events[event].splice(this._events[event].indexOf(fct), 1);\r\n  }\r\n\r\n  emit(event: EventType, ...args: any[]) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    for (var i = 0; i < this._events[event].length; i++)\r\n      this._events[event][i].apply(this, args);\r\n  }\r\n}\r\n\r\nconst CodeControlPool: CodeControl[] = [];\r\n\r\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\r\n\r\ntype CodeInfo = { line: number; desc: number };\r\n\r\nexport type CodeContext = {\r\n  info: CodeInfo;\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\n\r\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\r\n  static count = 0;\r\n  executableFunction: () => Promise<void>;\r\n\r\n  static saveContext(count: number, context: CodeContext) {\r\n    const instance = CodeControlPool[count];\r\n    if (instance) instance.saveCodeContext(context);\r\n    else {\r\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\r\n      context?.reject(\"The entity has been deleted.\");\r\n    }\r\n  }\r\n\r\n  count = CodeControl.count++;\r\n\r\n  codeContext?: CodeContext;\r\n\r\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\r\n\r\n  _breakpointFunctionDeclaration = `\r\n  function wait(info) {\r\n    return new Promise((resolve, reject) => {\r\n      // console.log(${this.count})\r\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\r\n    });\r\n  };\r\n  `;\r\n\r\n  constructor(source: string) {\r\n    super();\r\n\r\n    CodeControlPool.push(this);\r\n    console.log(CodeControlPool)\r\n    this.executableFunction = Function(`\r\n    ${this._breakpointFunctionDeclaration}\r\n    return async function () {\r\n      ${source}\r\n    };\r\n    `)();\r\n  }\r\n\r\n  start() {\r\n    this.emit(\"begin\");\r\n    this.status = \"running\";\r\n    this.executableFunction()\r\n      .catch((err: any) => {\r\n        this.status = \"error\";\r\n        console.warn(err);\r\n        this.emit(\"error\", err);\r\n      })\r\n      .finally(() => {\r\n        this.status = \"idle\";\r\n        this.emit(\"end\");\r\n      });\r\n  }\r\n\r\n  saveCodeContext(context: CodeContext) {\r\n    this.codeContext = context;\r\n    this.emit(\"wait\", context);\r\n  }\r\n\r\n  destroy() {\r\n    delete CodeControlPool[this.count];\r\n    this.offAll(\"end\");\r\n    this.offAll(\"begin\");\r\n    this.offAll(\"wait\");\r\n    this.offAll(\"error\");\r\n    this.emit(\"destroy\");\r\n    this.offAll(\"destroy\");\r\n  }\r\n}\r\n\r\n(window as any).CodeControl = CodeControl;\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js",[],["139","140"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":25,"column":16,"nodeType":"147","messageId":"148","endLine":25,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":27,"column":23,"nodeType":"152","messageId":"153","endLine":27,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":27,"column":42,"nodeType":"156","messageId":"157","endLine":27,"endColumn":64},{"ruleId":"150","severity":1,"message":"151","line":45,"column":23,"nodeType":"152","messageId":"153","endLine":45,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":78,"column":31,"nodeType":"160","messageId":"161","endLine":83,"endColumn":7},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","no-global-assign","no-unsafe-negation"]