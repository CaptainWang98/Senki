[{"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx":"1","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx":"2","C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts":"3","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts":"4","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts":"5","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx":"6","C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx":"7","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx":"8","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx":"9","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx":"10","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx":"11","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx":"12","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx":"13","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js":"14","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts":"15","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts":"16","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts":"17","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts":"18","C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts":"19","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts":"20","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts":"21","C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx":"22","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts":"23","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js":"24","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiLinkedNode.js":"25","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js":"26","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js":"27","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js":"28","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\ForestPlot.js":"29","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js":"30","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js":"31","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js":"32","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\selection.ts":"33","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\BreadcrumbNav.tsx":"34","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\quick.ts":"35","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\merge.ts":"36","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\shell.ts":"37","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\babel\\plugin-senki-wait.js":"38","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\Sort\\index.tsx":"39","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.ts":"40","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\Tree\\index.tsx":"41","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\tree\\inorderTraversal.ts":"42","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\tree\\minBinaryHeap.ts":"43"},{"size":197,"mtime":1611143005232,"results":"44","hashOfConfig":"45"},{"size":929,"mtime":1611894100475,"results":"46","hashOfConfig":"45"},{"size":833,"mtime":1612064173106,"results":"47","hashOfConfig":"45"},{"size":94,"mtime":1611149830611,"results":"48","hashOfConfig":"45"},{"size":281,"mtime":1612064155355,"results":"49","hashOfConfig":"45"},{"size":509,"mtime":1611894100487,"results":"50","hashOfConfig":"45"},{"size":3324,"mtime":1611995176379,"results":"51","hashOfConfig":"45"},{"size":83,"mtime":1611149072091,"results":"52","hashOfConfig":"45"},{"size":12126,"mtime":1612092234355,"results":"53","hashOfConfig":"45"},{"size":2630,"mtime":1612075714618,"results":"54","hashOfConfig":"45"},{"size":2742,"mtime":1611994725366,"results":"55","hashOfConfig":"45"},{"size":2066,"mtime":1611939036654,"results":"56","hashOfConfig":"45"},{"size":2829,"mtime":1612075703069,"results":"57","hashOfConfig":"45"},{"size":382,"mtime":1611853125431,"results":"58","hashOfConfig":"45"},{"size":120,"mtime":1611668943476,"results":"59","hashOfConfig":"45"},{"size":202,"mtime":1611931659594,"results":"60","hashOfConfig":"45"},{"size":610,"mtime":1612086473912,"results":"61","hashOfConfig":"45"},{"size":319,"mtime":1611669224401,"results":"62","hashOfConfig":"45"},{"size":2277,"mtime":1611894100536,"results":"63","hashOfConfig":"45"},{"size":3071,"mtime":1611910804487,"results":"64","hashOfConfig":"45"},{"size":1473,"mtime":1612066261396,"results":"65","hashOfConfig":"45"},{"size":2780,"mtime":1612092160717,"results":"66","hashOfConfig":"45"},{"size":268,"mtime":1611753353465,"results":"67","hashOfConfig":"45"},{"size":3110,"mtime":1611888336392,"results":"68","hashOfConfig":"45"},{"size":4352,"mtime":1612085683209,"results":"69","hashOfConfig":"45"},{"size":3651,"mtime":1612021634364,"results":"70","hashOfConfig":"45"},{"size":651,"mtime":1611881573634,"results":"71","hashOfConfig":"45"},{"size":9467,"mtime":1612079389439,"results":"72","hashOfConfig":"45"},{"size":8847,"mtime":1612085114940,"results":"73","hashOfConfig":"45"},{"size":4610,"mtime":1611755185761,"results":"74","hashOfConfig":"45"},{"size":4815,"mtime":1611853851760,"results":"75","hashOfConfig":"45"},{"size":957,"mtime":1611489783889,"results":"76","hashOfConfig":"45"},{"size":1645,"mtime":1612061785104,"results":"77","hashOfConfig":"45"},{"size":824,"mtime":1611931299637,"results":"78","hashOfConfig":"45"},{"size":2736,"mtime":1612061786647,"results":"79","hashOfConfig":"45"},{"size":2520,"mtime":1612061789042,"results":"80","hashOfConfig":"45"},{"size":2328,"mtime":1612061783294,"results":"81","hashOfConfig":"45"},{"size":3186,"mtime":1612015952625,"results":"82","hashOfConfig":"45"},{"size":6847,"mtime":1612093987268,"results":"83","hashOfConfig":"45"},{"size":201,"mtime":1612064095943,"results":"84","hashOfConfig":"45"},{"size":6678,"mtime":1612093977557,"results":"85","hashOfConfig":"45"},{"size":4077,"mtime":1612094282037,"results":"86","hashOfConfig":"45"},{"size":5478,"mtime":1612094380615,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"tj6rwr",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lyq__\\Desktop\\senki\\src\\index.tsx",[],["178","179"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\app\\routes.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Footer\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\layout\\Header\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\NotFound\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\VisualEditor\\index.tsx",["180"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\Welcome\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\CodeDesc.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\AlgoSimulate\\AlgoBox.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\index.js",[],["181","182"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\NormalStyle.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\util\\date.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\CodeControl.ts",["183"],"import \"../senki/index.js\";\r\n\r\nclass MicroEvent<EventType extends string> {\r\n  _events!: {\r\n    [key in string]: ((...args: any[]) => void)[];\r\n  };\r\n\r\n  on(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(fct);\r\n  }\r\n\r\n  offAll(event: EventType) {\r\n    this._events = this._events || {};\r\n    delete this._events[event];\r\n  }\r\n\r\n  off(event: EventType, fct: (...args: any[]) => void) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    let idx = this._events[event].indexOf(fct)\r\n    if (idx !== -1) this._events[event].splice(idx, 1);\r\n  }\r\n\r\n  emit(event: EventType, ...args: any[]) {\r\n    this._events = this._events || {};\r\n    if (event in this._events === false) return;\r\n    for (var i = 0; i < this._events[event].length; i++)\r\n      this._events[event][i].apply(this, args);\r\n  }\r\n}\r\n\r\nconst CodeControlPool: CodeControl[] = [];\r\n\r\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\r\n\r\ntype CodeInfo = { line: number[]; desc: number };\r\n\r\nexport type CodeContext = {\r\n  info: CodeInfo;\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\n\r\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\r\n  static count = 0;\r\n  executableFunction: () => Promise<void>;\r\n\r\n  static saveContext(count: number, context: CodeContext) {\r\n    const instance = CodeControlPool[count];\r\n    if (instance) instance.saveCodeContext(context);\r\n    else {\r\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\r\n      context?.reject(\"The entity has been deleted.\");\r\n    }\r\n  }\r\n\r\n  count = CodeControl.count++;\r\n\r\n  codeContext?: CodeContext;\r\n\r\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\r\n\r\n  _breakpointFunctionDeclaration = `\r\n  function wait(info) {\r\n    return new Promise((resolve, reject) => {\r\n      // console.log(${this.count})\r\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\r\n    });\r\n  };\r\n  `;\r\n\r\n  constructor(source: string) {\r\n    super();\r\n\r\n    CodeControlPool.push(this);\r\n\r\n    this.executableFunction = Function(`\r\n    ${this._breakpointFunctionDeclaration}\r\n    return async function () {\r\n      ${source}\r\n    };\r\n    `)();\r\n  }\r\n\r\n  start() {\r\n    this.emit(\"begin\");\r\n    this.status = \"running\";\r\n    this.executableFunction()\r\n      .catch((err: any) => {\r\n        this.status = \"error\";\r\n        console.warn(err);\r\n        this.emit(\"error\", err);\r\n      })\r\n      .finally(() => {\r\n        this.status = \"idle\";\r\n        this.emit(\"end\");\r\n      });\r\n  }\r\n\r\n  saveCodeContext(context: CodeContext) {\r\n    this.codeContext = context;\r\n    this.emit(\"wait\", context);\r\n  }\r\n\r\n  destroy() {\r\n    delete CodeControlPool[this.count];\r\n    this.offAll(\"end\");\r\n    this.offAll(\"begin\");\r\n    this.offAll(\"wait\");\r\n    this.offAll(\"error\");\r\n    this.emit(\"destroy\");\r\n    this.offAll(\"destroy\");\r\n  }\r\n}\r\n\r\n(window as any).CodeControl = CodeControl;\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\bubble.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\components\\ControlTrack.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\makeAlgoSource.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\object.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiLinkedNode.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\structure\\SenkiArray.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\scheduler.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\Histogram.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\components\\ForestPlot.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\anim.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\shape.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\senki\\base\\util.js",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\selection.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\BreadcrumbNav.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\quick.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\merge.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\sort\\shell.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\babel\\plugin-senki-wait.js",["184"],"export default function ({ types: t }) {\r\n  const findLine = (path, node) => {\r\n    if (node && node.loc) return [node.loc.start.line, node.loc.end.line];\r\n\r\n    if (!path) return -1;\r\n\r\n    if (path.node.loc)\r\n      return [path.node.loc.start.line, path.node.loc.end.line];\r\n    else return findLine(path.parentPath);\r\n  };\r\n\r\n  const createWaitNode = ([lineStart = -1, lineEnd = -1], descNum = -1) => {\r\n    return t.awaitExpression(\r\n      t.callExpression(t.identifier(\"wait\"), [\r\n        t.objectExpression([\r\n          t.objectProperty(\r\n            t.identifier(\"line\"),\r\n            t.arrayExpression([\r\n              t.numericLiteral(lineStart),\r\n              t.numericLiteral(lineEnd),\r\n            ])\r\n          ),\r\n          t.objectProperty(t.identifier(\"desc\"), t.numericLiteral(descNum)),\r\n        ]),\r\n      ])\r\n    );\r\n  };\r\n\r\n  return {\r\n    name: \"senki-wait\",\r\n    visitor: {\r\n      Program(path) {\r\n        let len = path.node.body.length;\r\n        for (let i = 0; i < len; i++) {\r\n          path.node.body.splice(\r\n            i * 2 + 1,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[i * 2]))\r\n          );\r\n        }\r\n      },\r\n      ArrowFunctionExpression(path) {\r\n        if (t.isExpression(path.node.body)) {\r\n          path\r\n            .get(\"body\")\r\n            .replaceWith(t.blockStatement([t.returnStatement(path.node.body)]));\r\n        }\r\n      },\r\n      Statement(path) {\r\n        if (t.isBlockStatement(path.node)) return;\r\n        if (t.isBreakStatement(path.node)) return;\r\n\r\n        const parentNode = path.parentPath.node;\r\n\r\n        if (t.isWithStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isIfStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isWhileStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isDoWhileStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isForStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isForInStatement(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n\r\n        if (t.isSwitchCase(parentNode)) {\r\n          path.replaceWith(t.blockStatement([path.node]));\r\n        }\r\n      },\r\n      BlockStatement(path) {\r\n        let len = path.node.body.length;\r\n        for (let i = 0; i < len; i++) {\r\n          path.node.body.splice(\r\n            i * 2,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[i * 2 - 1]))\r\n          );\r\n        }\r\n        if (!t.isReturnStatement(path.node.body[len * 2 - 1]))\r\n          path.node.body.splice(\r\n            len * 2,\r\n            0,\r\n            createWaitNode(findLine(path, path.node.body[len * 2 - 1]))\r\n          );\r\n      },\r\n      Function(path) {\r\n        path.node.async = true;\r\n      },\r\n      CallExpression(path) {\r\n        if (!t.isAwaitExpression(path.parentPath.node))\r\n          path.replaceWith(t.awaitExpression(path.node))\r\n      }\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\Sort\\index.tsx",["185"],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\index.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\pages\\SimulateDetail\\Tree\\index.tsx",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\tree\\inorderTraversal.ts",[],"C:\\Users\\lyq__\\Desktop\\senki\\src\\lib\\algo_desc\\tree\\minBinaryHeap.ts",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":56,"column":16,"nodeType":"192","messageId":"193","endLine":56,"endColumn":23},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"194","severity":1,"message":"195","line":79,"column":31,"nodeType":"196","messageId":"197","endLine":84,"endColumn":7},{"ruleId":"198","severity":1,"message":"199","line":1,"column":1,"nodeType":"200","endLine":108,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":124,"column":6,"nodeType":"203","endLine":124,"endColumn":33,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'setCode' is assigned a value but never used.","Identifier","unusedVar","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'reviseArray'. Either include it or remove the dependency array.","ArrayExpression",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [canvas, location.pathname, reviseArray]",{"range":"210","text":"211"},[3637,3664],"[canvas, location.pathname, reviseArray]"]