[{"/Users/k/Documents/Senki/src/index.tsx":"1","/Users/k/Documents/Senki/src/app/index.tsx":"2","/Users/k/Documents/Senki/src/app/routes.ts":"3","/Users/k/Documents/Senki/src/layout/index.ts":"4","/Users/k/Documents/Senki/src/pages/index.ts":"5","/Users/k/Documents/Senki/src/layout/Footer/index.tsx":"6","/Users/k/Documents/Senki/src/layout/Header/index.tsx":"7","/Users/k/Documents/Senki/src/pages/Welcome/index.tsx":"8","/Users/k/Documents/Senki/src/pages/VisualEditor/index.tsx":"9","/Users/k/Documents/Senki/src/pages/AlgoSimulate/index.tsx":"10","/Users/k/Documents/Senki/src/pages/NotFound/index.tsx":"11","/Users/k/Documents/Senki/src/pages/SimulateDetail/index.tsx":"12","/Users/k/Documents/Senki/src/pages/AlgoSimulate/AlgoBox.tsx":"13","/Users/k/Documents/Senki/src/pages/SimulateDetail/CodeDesc.tsx":"14","/Users/k/Documents/Senki/src/lib/senki/index.js":"15","/Users/k/Documents/Senki/src/components/index.ts":"16","/Users/k/Documents/Senki/src/util/index.ts":"17","/Users/k/Documents/Senki/src/lib/algo_desc/index.ts":"18","/Users/k/Documents/Senki/src/lib/senki/structure/SenkiArray.js":"19","/Users/k/Documents/Senki/src/lib/senki/base/object.js":"20","/Users/k/Documents/Senki/src/util/date.ts":"21","/Users/k/Documents/Senki/src/components/NormalStyle.ts":"22","/Users/k/Documents/Senki/src/lib/senki/base/anim.js":"23","/Users/k/Documents/Senki/src/lib/senki/components/Histogram.js":"24","/Users/k/Documents/Senki/src/lib/senki/base/scheduler.js":"25","/Users/k/Documents/Senki/src/lib/algo_desc/CodeControl.ts":"26","/Users/k/Documents/Senki/src/components/ControlTrack.tsx":"27","/Users/k/Documents/Senki/src/lib/algo_desc/sort/bubble.ts":"28","/Users/k/Documents/Senki/src/lib/senki/base/shape.js":"29","/Users/k/Documents/Senki/src/lib/senki/base/util.js":"30","/Users/k/Documents/Senki/src/lib/algo_desc/makeAlgoSource.ts":"31","/Users/k/Documents/Senki/src/lib/algo_desc/sort/selection.ts":"32","/Users/k/Documents/Senki/src/lib/senki/structure/SenkiLinkedNode.js":"33","/Users/k/Documents/Senki/src/lib/senki/components/ForestPlot.js":"34"},{"size":197,"mtime":1611233214162,"results":"35","hashOfConfig":"36"},{"size":885,"mtime":1611910661273,"results":"37","hashOfConfig":"36"},{"size":619,"mtime":1611734486877,"results":"38","hashOfConfig":"36"},{"size":92,"mtime":1611233214163,"results":"39","hashOfConfig":"36"},{"size":276,"mtime":1611734486889,"results":"40","hashOfConfig":"36"},{"size":486,"mtime":1611910661275,"results":"41","hashOfConfig":"36"},{"size":3718,"mtime":1611910661275,"results":"42","hashOfConfig":"36"},{"size":2621,"mtime":1611910661285,"results":"43","hashOfConfig":"36"},{"size":2079,"mtime":1611734486887,"results":"44","hashOfConfig":"36"},{"size":1464,"mtime":1611910661284,"results":"45","hashOfConfig":"36"},{"size":79,"mtime":1611233214164,"results":"46","hashOfConfig":"36"},{"size":4761,"mtime":1611910661295,"results":"47","hashOfConfig":"36"},{"size":2142,"mtime":1611910661284,"results":"48","hashOfConfig":"36"},{"size":2365,"mtime":1611910661297,"results":"49","hashOfConfig":"36"},{"size":374,"mtime":1611910661282,"results":"50","hashOfConfig":"36"},{"size":118,"mtime":1611734486878,"results":"51","hashOfConfig":"36"},{"size":191,"mtime":1611734486890,"results":"52","hashOfConfig":"36"},{"size":171,"mtime":1611817110527,"results":"53","hashOfConfig":"36"},{"size":3426,"mtime":1611910661282,"results":"54","hashOfConfig":"36"},{"size":2978,"mtime":1611910661279,"results":"55","hashOfConfig":"36"},{"size":2206,"mtime":1611910661287,"results":"56","hashOfConfig":"36"},{"size":304,"mtime":1611734486878,"results":"57","hashOfConfig":"36"},{"size":4433,"mtime":1611622909736,"results":"58","hashOfConfig":"36"},{"size":7725,"mtime":1611838598243,"results":"59","hashOfConfig":"36"},{"size":623,"mtime":1611622909737,"results":"60","hashOfConfig":"36"},{"size":2953,"mtime":1611910661302,"results":"61","hashOfConfig":"36"},{"size":2372,"mtime":1611910661274,"results":"62","hashOfConfig":"36"},{"size":3145,"mtime":1611910661276,"results":"63","hashOfConfig":"36"},{"size":4630,"mtime":1611910661280,"results":"64","hashOfConfig":"36"},{"size":923,"mtime":1611622909737,"results":"65","hashOfConfig":"36"},{"size":257,"mtime":1611817110528,"results":"66","hashOfConfig":"36"},{"size":1609,"mtime":1611827934317,"results":"67","hashOfConfig":"36"},{"size":3872,"mtime":1611910661283,"results":"68","hashOfConfig":"36"},{"size":8276,"mtime":1611910661281,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"itvoxh",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/k/Documents/Senki/src/index.tsx",[],["144","145"],"/Users/k/Documents/Senki/src/app/index.tsx",[],"/Users/k/Documents/Senki/src/app/routes.ts",[],"/Users/k/Documents/Senki/src/layout/index.ts",[],"/Users/k/Documents/Senki/src/pages/index.ts",[],"/Users/k/Documents/Senki/src/layout/Footer/index.tsx",[],"/Users/k/Documents/Senki/src/layout/Header/index.tsx",[],"/Users/k/Documents/Senki/src/pages/Welcome/index.tsx",[],"/Users/k/Documents/Senki/src/pages/VisualEditor/index.tsx",[],"/Users/k/Documents/Senki/src/pages/AlgoSimulate/index.tsx",[],"/Users/k/Documents/Senki/src/pages/NotFound/index.tsx",[],"/Users/k/Documents/Senki/src/pages/SimulateDetail/index.tsx",["146","147"],"import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Breadcrumb } from \"antd\";\nimport { HomeOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { ControlTrack, useNormalStyles } from \"../../components\";\nimport { C } from \"../../util\";\nimport CodeDesc from \"./CodeDesc\";\nimport { Scene, SenkiArray } from \"../../lib/senki\";\nimport {\n  CodeContext,\n  CodeControl,\n  makeBubbleAlgoSource,\n} from \"../../lib/algo_desc\";\nimport makeSelectionAlgoSource from \"../../lib/algo_desc/sort/selection\";\n\nlet scene: Scene;\nlet codeControl: CodeControl;\n// let [fakeCode, desc, realCode] = makeBubbleAlgoSource();\nlet [fakeCode, desc, realCode] = makeSelectionAlgoSource();\n\nlet tempTask: () => void | undefined; // 保存断点继续的执行函数\n\nconst SimulateDetail = () => {\n  const classes = useStyles();\n  const { flexRow, flexCol } = useNormalStyles();\n\n  const [data] = useState<[]>()\n  const [status, setStatus] = useState<\"stop\" | \"play\" | \"finish\">(\"stop\");\n  const [codeInfo, setCodeInfo] = useState({ line: [-1,-1], desc: -1 }); // TODO  利用line高亮对应代码行\n\n  const statusRef = useRef(status);\n  statusRef.current = status; // 没办法，为了在闭包函数里引用，只能干这种愚蠢操作。\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const createNewCodeControl = () => {\n    codeControl = new CodeControl(realCode);\n\n    const handleWait = ({ info, resolve }: CodeContext) => {\n      setCodeInfo(info);\n\n      // 确定动画结束了再进行下一步\n      const tryToNext = () => {\n        if (statusRef.current === \"play\") {\n          if (scene.isAnimAllOver()) resolve();\n          else setTimeout(tryToNext, 100);\n        } else tempTask = resolve;\n      };\n\n      setTimeout(tryToNext, 500);\n    };\n\n    const handleEnd = () => {\n      setStatus(\"finish\");\n      setCodeInfo({ line: [-1,-1], desc: -1 });\n    };\n\n    const handleDestroy = () => {\n      scene.removeAllChild();\n    };\n\n    codeControl.on(\"wait\", handleWait);\n    codeControl.on(\"end\", handleEnd);\n    codeControl.on(\"destroy\", handleDestroy);\n\n    codeControl.start();\n  };\n\n  const handlePlay = () => {\n    if (tempTask) tempTask();\n    setStatus(\"play\");\n  };\n\n  const handleRestart = () => {\n    [fakeCode, desc, realCode] = makeSelectionAlgoSource(data);\n    codeControl.destroy(); // 一定要记得销毁\n    createNewCodeControl();\n    setStatus(\"play\");\n  };\n\n  const handleStop = () => {\n    setStatus(\"stop\");\n  };\n\n  const handleChangeSpeed = () => {};\n\n  useLayoutEffect(() => {\n    scene = new Scene(canvas.current!);\n    SenkiArray.config.scene = scene;\n    SenkiArray.config.width = scene.width;\n    SenkiArray.config.height = scene.height;\n    createNewCodeControl();\n  }, [canvas]);\n\n  return (\n    <div className={C([classes.container, flexCol])}>\n      <Breadcrumb className={classes.breadNav}>\n        <Breadcrumb.Item href=\"/\">\n          <HomeOutlined />\n        </Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/algosimulate\">\n          <UserOutlined />\n          <span>算法模拟</span>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>模拟详情</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className={C([classes.codeBox, flexRow])}>\n        <CodeDesc code={fakeCode} desc={desc} info={codeInfo} />\n        <canvas ref={canvas} className={classes.canvas}></canvas>\n      </div>\n      <div className={C([classes.operationArea, flexCol])}>\n        <div className={flexRow}>\n          <div className={classes.operationSingleArea}>\n            <div className={classes.operationPart}>\n              一些列表，切换使用的算法\n            </div>\n          </div>\n          <div className={classes.operationSingleArea}>\n            <div className={classes.operationPart}>数组操作</div>\n          </div>\n        </div>\n        <ControlTrack\n          status={status}\n          speed={400}\n          onPlay={handlePlay}\n          onStop={handleStop}\n          onRestart={handleRestart}\n          onChangeSpeed={handleChangeSpeed}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SimulateDetail;\n\nconst useStyles = makeStyles({\n  container: {\n    minHeight: \"calc(100vh - 60px)\",\n  },\n  breadNav: {\n    padding: 13,\n  },\n  codeBox: {\n    flex: 1,\n  },\n  canvas: {\n    flex: 1,\n    marginLeft: 50,\n    marginRight: 50,\n  },\n  operationArea: {\n    margin: 13,\n    height: \"20vh\",\n    backgroundColor: \"#2c303a\",\n  },\n  operationPart: {\n    height: \"47%\",\n    marginTop: \"1%\",\n    marginBottom: \"1%\",\n    backgroundColor: \"white\",\n  },\n  operationSingleArea: {\n    width: \"48%\",\n    height: \"100%\",\n    padding: \"0.5%\",\n  },\n  operationCode: {\n    backgroundColor: \"white\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n","/Users/k/Documents/Senki/src/pages/AlgoSimulate/AlgoBox.tsx",[],"/Users/k/Documents/Senki/src/pages/SimulateDetail/CodeDesc.tsx",[],"/Users/k/Documents/Senki/src/lib/senki/index.js",[],["148","149"],"/Users/k/Documents/Senki/src/components/index.ts",[],"/Users/k/Documents/Senki/src/util/index.ts",[],"/Users/k/Documents/Senki/src/lib/algo_desc/index.ts",[],"/Users/k/Documents/Senki/src/lib/senki/structure/SenkiArray.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/object.js",[],"/Users/k/Documents/Senki/src/util/date.ts",["150","151","152"],"const WEEK_CHINESE = [\"七\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n\nexport const SECOND = 1000\n\nexport const MINUTE = SECOND * 60\n\nexport const HOUR = MINUTE * 60\n\nexport const HALF_DAY = HOUR * 12\n\nexport const DAY = HALF_DAY * 2\n\n/**\n * 根据时间戳格式化时间\n * @param  fmt 格式\n * @param  timestamp 时间\n * @example\n * let date = new Date()\n * dateFormat(\"YYYY-mm-dd HH:MM\", date)\n * >>> 2019-06-06 19:45`\n */\nexport function dateFormat(fmt: string, timestamp: number | string | Date): string {\n  let ret: RegExpExecArray;\n\n  let date = timestamp instanceof Date ? timestamp : new Date(Number(timestamp));\n\n  if (date.toString() == \"Invalid Date\") throw \"err timestamp\";\n\n  const opt = {\n    \"Y+\": date.getFullYear().toString(), // 年\n    \"m+\": (date.getMonth() + 1).toString(), // 月\n    \"d+\": date.getDate().toString(), // 日\n    \"H+\": date.getHours().toString(), // 时\n    \"M+\": date.getMinutes().toString(), // 分\n    \"S+\": date.getSeconds().toString(), // 秒\n    \"w+\": WEEK_CHINESE[date.getDay()] //周X\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\n  };\n\n  Object.keys(opt).forEach((k) => {\n    ret = new RegExp(\"(\" + k + \")\").exec(fmt)!;\n    if (ret) {\n      fmt = fmt.replace(\n        ret[1],\n        ret[1].length == 1 ? (opt as any)[k] : (opt as any)[k].padStart(ret[1].length, \"0\")\n      );\n    }\n  })\n\n  return fmt;\n}\n\n/**\n * 获取合适的时间提示\n */\nexport function getTipTime(timestamp1: number): string {\n  let date1 = new Date(timestamp1);\n  let date2 = new Date();\n  let timestamp2 = Date.now();\n\n  if (date2.getDate() === date1.getDate() && timestamp2 - timestamp1 < DAY)\n    return dateFormat(\"HH:MM\", date1);\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < DAY)\n    return dateFormat(\"昨天 HH:MM\", date1);\n  else if (date2.setHours(0, 0, 0, 0) - timestamp1 < 2 * DAY)\n    return dateFormat(\"前天 HH:MM\", date1);\n  else if (date2.getDay() >= date1.getDay() && timestamp2 - timestamp1 < DAY * 7)\n    return dateFormat(\"星期w HH:MM\", date1);\n  else if (date2.getFullYear() === date1.getFullYear())\n    return dateFormat(\"mm-dd HH:MM\", date1);\n  else return dateFormat(\"YYYY-mm-dd HH:MM\", date1);\n}","/Users/k/Documents/Senki/src/components/NormalStyle.ts",[],"/Users/k/Documents/Senki/src/lib/senki/base/anim.js",[],"/Users/k/Documents/Senki/src/lib/senki/components/Histogram.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/scheduler.js",[],"/Users/k/Documents/Senki/src/lib/algo_desc/CodeControl.ts",["153"],"import \"../senki/index.js\";\n\nclass MicroEvent<EventType extends string> {\n  _events!: {\n    [key in string]: ((...args: any[]) => void)[];\n  };\n\n  on(event: EventType, fct: (...args: any[]) => void) {\n    this._events = this._events || {};\n    this._events[event] = this._events[event] || [];\n    this._events[event].push(fct);\n  }\n\n  offAll(event: EventType) {\n    this._events = this._events || {};\n    delete this._events[event];\n  }\n\n  off(event: EventType, fct: (...args: any[]) => void) {\n    this._events = this._events || {};\n    if (event in this._events === false) return;\n    let idx = this._events[event].indexOf(fct)\n    if (idx !== -1) this._events[event].splice(idx, 1);\n  }\n\n  emit(event: EventType, ...args: any[]) {\n    this._events = this._events || {};\n    if (event in this._events === false) return;\n    for (var i = 0; i < this._events[event].length; i++)\n      this._events[event][i].apply(this, args);\n  }\n}\n\nconst CodeControlPool: CodeControl[] = [];\n\ntype CodeControlEvent = \"end\" | \"begin\" | \"wait\" | \"error\" | \"destroy\";\n\ntype CodeInfo = { line: number[]; desc: number };\n\nexport type CodeContext = {\n  info: CodeInfo;\n  resolve: (value?: any) => void;\n  reject: (reason?: any) => void;\n};\n\nexport default class CodeControl extends MicroEvent<CodeControlEvent> {\n  static count = 0;\n  executableFunction: () => Promise<void>;\n\n  static saveContext(count: number, context: CodeContext) {\n    const instance = CodeControlPool[count];\n    if (instance) instance.saveCodeContext(context);\n    else {\n      console.warn(\"CodeControl \" + count + \" not Found，try to end the task.\");\n      context?.reject(\"The entity has been deleted.\");\n    }\n  }\n\n  count = CodeControl.count++;\n\n  codeContext?: CodeContext;\n\n  status: \"running\" | \"idle\" | \"error\" = \"idle\";\n\n  _breakpointFunctionDeclaration = `\n  function wait(info) {\n    return new Promise((resolve, reject) => {\n      // console.log(${this.count})\n      ${this.constructor.name}.saveContext(${this.count}, { info, resolve, reject });\n    });\n  };\n  `;\n\n  constructor(source: string) {\n    super();\n\n    CodeControlPool.push(this);\n\n    this.executableFunction = Function(`\n    ${this._breakpointFunctionDeclaration}\n    return async function () {\n      ${source}\n    };\n    `)();\n  }\n\n  start() {\n    this.emit(\"begin\");\n    this.status = \"running\";\n    this.executableFunction()\n      .catch((err: any) => {\n        this.status = \"error\";\n        console.warn(err);\n        this.emit(\"error\", err);\n      })\n      .finally(() => {\n        this.status = \"idle\";\n        this.emit(\"end\");\n      });\n  }\n\n  saveCodeContext(context: CodeContext) {\n    this.codeContext = context;\n    this.emit(\"wait\", context);\n  }\n\n  destroy() {\n    delete CodeControlPool[this.count];\n    this.offAll(\"end\");\n    this.offAll(\"begin\");\n    this.offAll(\"wait\");\n    this.offAll(\"error\");\n    this.emit(\"destroy\");\n    this.offAll(\"destroy\");\n  }\n}\n\n(window as any).CodeControl = CodeControl;\n","/Users/k/Documents/Senki/src/components/ControlTrack.tsx",["154"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Slider } from \"antd\";\nimport {\n  StepBackwardOutlined,\n  CaretLeftOutlined,\n  CaretRightOutlined,\n  StepForwardOutlined,\n  RedoOutlined,\n  PlayCircleFilled,\n  PauseOutlined,\n} from \"@ant-design/icons\";\nimport { C } from \"../util\";\n\ntype Props = {\n  status: \"stop\" | \"play\" | \"finish\";\n  speed: number;\n  className?: string;\n  onPlay?: () => void;\n  onStop?: () => void;\n  onRestart?: () => void;\n  onChangeSpeed?: (speed: number) => void;\n};\n\nconst ControlTrack = (props: Props) => {\n  const { className, speed, status } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={C([classes.controlTrack, className])}>\n      <div className={classes.speedContainer}>\n        <span>Speed</span>\n        <div className={classes.speedSlider}>\n          <Slider\n            defaultValue={speed || 400}\n            step={100}\n            min={100}\n            max={700}\n            onChange={props.onChangeSpeed}\n          />\n        </div>\n      </div>\n      <div className={classes.iconGroup}>\n        <StepBackwardOutlined className={classes.icon} />\n        <CaretLeftOutlined className={classes.icon} />\n        {status === \"stop\" && (\n          <PlayCircleFilled className={classes.icon} onClick={props.onPlay} />\n        )}\n        {status === \"play\" && (\n          <PauseOutlined className={classes.icon} onClick={props.onStop} />\n        )}\n        {status === \"finish\" && (\n          <RedoOutlined className={classes.icon} onClick={props.onRestart} />\n        )}\n        <CaretRightOutlined className={classes.icon} />\n        <StepForwardOutlined className={classes.icon} />\n      </div>\n    </div>\n  );\n};\n\nexport default ControlTrack;\n\nconst useStyles = makeStyles({\n  controlTrack: {\n    height: 60,\n    backgroundColor: \"#2c303a\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"5px\",\n  },\n  speedContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"50%\",\n    color: \"white\",\n    fontSize: \"18px\",\n    marginLeft: \"15px\",\n  },\n  speedSlider: {\n    width: \"70%\",\n    marginLeft: \"10px\",\n  },\n  icon: {\n    color: \"white\",\n    fontSize: \"27px\",\n    marginRight: \"20px\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  iconGroup: {\n    marginRight: \"60px\",\n  },\n});\n","/Users/k/Documents/Senki/src/lib/algo_desc/sort/bubble.ts",[],"/Users/k/Documents/Senki/src/lib/senki/base/shape.js",[],"/Users/k/Documents/Senki/src/lib/senki/base/util.js",[],"/Users/k/Documents/Senki/src/lib/algo_desc/makeAlgoSource.ts",[],"/Users/k/Documents/Senki/src/lib/algo_desc/sort/selection.ts",[],"/Users/k/Documents/Senki/src/lib/senki/structure/SenkiLinkedNode.js",[],"/Users/k/Documents/Senki/src/lib/senki/components/ForestPlot.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":3,"nodeType":"161","messageId":"162","endLine":12,"endColumn":23},{"ruleId":"159","severity":1,"message":"163","line":27,"column":16,"nodeType":"161","messageId":"162","endLine":27,"endColumn":23},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"164","severity":1,"message":"165","line":27,"column":23,"nodeType":"166","messageId":"167","endLine":27,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":27,"column":42,"nodeType":"170","messageId":"171","endLine":27,"endColumn":64},{"ruleId":"164","severity":1,"message":"165","line":45,"column":23,"nodeType":"166","messageId":"167","endLine":45,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":78,"column":31,"nodeType":"174","messageId":"175","endLine":83,"endColumn":7},{"ruleId":"159","severity":1,"message":"176","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'makeBubbleAlgoSource' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]